{
	"version": "2",
	"templates": [
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
			"image": "adguard/adguardhome:latest",
			"logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
			"name": "Adguardhome",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"80:80/tcp",
				"443:443/tcp",
				"443:443/udp",
				"3001:3000/tcp",
				"853:853/tcp",
				"784:784/udp",
				"853:853/udp",
				"8853:8853/udp",
				"5443:5443/tcp",
				"5443:5443/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Adguardhome",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/AdguardHome/config",
					"container": "/opt/adguardhome/conf"
				},
				{
					"bind": "/portainer/Files/AppData/Config/AdguardHome/work",
					"container": "/opt/adguardhome/work"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Alpine xfce4 novnc",
			"image": "novaspirit/alpine_xfce4_novnc:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/novnc.png",
			"name": "alpine-xfce4-novnc",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><br><br>Default username/password will be alpine/alpine.",
			"platform": "linux",
			"ports": [
				"6080:6080/tcp",
				"56780:56780/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Alpine Xfce4 noVNC",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/alpine-xfce4-novnc/home/apline/downloads",
					"container": "/home/apline/downloads"
				}
			]
		},
		{
			"categories": [
				"Web",
				"Proxy"
			],
			"description": "The Apache HTTP Server is a free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "httpd:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/apache-httpd.png",
			"name": "apache-httpd",
			"platform": "linux",
			"ports": [
				"8080:80/tcp",
				"8443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Apache Httpd",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/apache-httpd",
					"container": "/usr/local/apache2/htdocs/"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://httpd.apache.org/\" target=\"_blank\">https://httpd.apache.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/httpd\" target=\"_blank\">https://hub.docker.com/_/httpd</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Games"
			],
			"description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "justarchi/archisteamfarm:latest",
			"logo": "https://raw.githubusercontent.com/JustArchiNET/ArchiSteamFarm/main/resources/ASF_184x184.png",
			"name": "archisteamfarm",
			"platform": "linux",
			"ports": [
				"1242:1242/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "ArchiSteamFarm",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/config",
					"container": "/app/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/plugins",
					"container": "/app/plugins"
				},
				{
					"bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/logs",
					"container": "/app/logs"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
			"env": [
				{
					"default": "*",
					"label": "ALLOWED_HOSTS",
					"name": "ALLOWED_HOSTS"
				},
				{
					"default": "750m",
					"label": "MEDIA_MAX_SIZE",
					"name": "MEDIA_MAX_SIZE"
				},
				{
					"default": "true",
					"label": "PUBLIC_INDEX",
					"name": "PUBLIC_INDEX"
				},
				{
					"default": "true",
					"label": "PUBLIC_SNAPSHOTS",
					"name": "PUBLIC_SNAPSHOTS"
				},
				{
					"default": "false",
					"label": "PUBLIC_ADD_VIEW",
					"name": "PUBLIC_ADD_VIEW"
				}
			],
			"image": "archivebox/archivebox:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
			"name": "archivebox",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://archivebox.io/\" target=\"_blank\">https://archivebox.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki/Docker\" target=\"_blank\">https://github.com/ArchiveBox/ArchiveBox/wiki/Docker</a><br><br><br>By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
			"platform": "linux",
			"ports": [
				"8002:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Archivebox",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/archivebox",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Downloader"
			],
			"description": "AriaNg is a modern web frontend making aria2 easier to use. AriaNg is written in pure html & javascript, thus it does not need any compilers or runtime environment. You can just put AriaNg in your web server and open it in your browser. AriaNg uses responsive layout, and supports any desktop or mobile devices.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "443",
					"label": "ARIA2RPCPORT",
					"name": "ARIA2RPCPORT"
				}
			],
			"image": "hurlenko/aria2-ariang:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ariang.png",
			"name": "AriaNG",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "AriaNG",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/AriaNG",
					"container": "/aria2/conf"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/aria2/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Authentication"
			],
			"description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
			"env": [
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "authelia/authelia:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authelia.png",
			"name": "authelia",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.authelia.com/\" target=\"_blank\">https://www.authelia.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.authelia.com/docs/configuration/\" target=\"_blank\">https://www.authelia.com/docs/configuration/</a><br><br><br>Requires a configuration.yml file in order to work. Documentation is Available <a href='https://www.authelia.com/configuration/prologue/introduction/'>here</a>.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Authelia",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Authelia",
					"container": "/etc/authelia/"
				}
			]
		},
		{
			"categories": [
				"Wiki"
			],
			"description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				},
				{
					"default": "http://192.168.X.Y:6875",
					"description": "Address to access Bookstack. If using a domain, add it here. If not set correctly the app will not be accessible",
					"label": "APP_URL",
					"name": "APP_URL"
				},
				{
					"default": "6875",
					"label": "PORT",
					"name": "PORT"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bookstack2.png",
			"name": "bookstack",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.bookstackapp.com/\" target=\"_blank\">https://www.bookstackapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.bookstackapp.com/docs/admin/installation/#docker\" target=\"_blank\">https://www.bookstackapp.com/docs/admin/installation/#docker</a><br><br><br>Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/bookstack.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"title": "Bookstack",
			"type": 3
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Webserver"
			],
			"description": "Caddy - The Ultimate Server with Automatic HTTPS.  Need to run tools/install_caddy.sh before installing the template.",
			"image": "caddy:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/caddy.png",
			"name": "caddy",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://caddyserver.com/\" target=\"_blank\">https://caddyserver.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/caddy\" target=\"_blank\">https://hub.docker.com/_/caddy</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_caddy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_caddy.sh | bash</h3><br><br>Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"443:443/tcp",
				"2019:2019/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Caddy",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Caddy/Data",
					"container": "/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Caddy/Config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Caddy/Caddyfile",
					"container": "/etc/caddy/Caddyfile"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Photo"
			],
			"description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "",
					"label": "CHEVERETO_DB_HOST",
					"name": "CHEVERETO_DB_HOST"
				},
				{
					"default": "",
					"label": "CHEVERETO_DB_USERNAME",
					"name": "CHEVERETO_DB_USERNAME"
				},
				{
					"default": "",
					"label": "CHEVERETO_DB_PASSWORD",
					"name": "CHEVERETO_DB_PASSWORD"
				},
				{
					"default": "",
					"label": "CHEVERETO_DB_NAME",
					"name": "CHEVERETO_DB_NAME"
				},
				{
					"default": "",
					"label": "CHEVERETO_DB_PREFIX",
					"name": "CHEVERETO_DB_PREFIX"
				}
			],
			"image": "nmtan/chevereto:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/Chevereto.png",
			"name": "Chevereto",
			"platform": "linux",
			"ports": [
				"7382:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Chevereto",
			"type": 1,
			"volumes": [
				{
					"container": "/var/www/html/images"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://chevereto.com/\" target=\"_blank\">https://chevereto.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/nmtan/chevereto\" target=\"_blank\">https://hub.docker.com/r/nmtan/chevereto</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"tools"
			],
			"description": "chrony is a versatile implementation of the Network Time Protocol (NTP). It can synchronise the system clock with NTP servers, reference clocks (e.g. GPS receiver), and manual input using wristwatch and keyboard. It can also operate as an NTPv4 (RFC 5905) server and peer to provide a time service to other computers in the network.",
			"env": [
				{
					"default": "0",
					"label": "LOG_LEVEL",
					"name": "LOG_LEVEL"
				},
				{
					"description": "Additional Example: time1.google.com,time2.google.com,time3.google.com,time4.google.com",
					"default": "time.cloudflare.com",
					"label": "NTP_SERVERS",
					"name": "NTP_SERVERS"
				}
			],
			"image": "cturra/ntp:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/chrony.png",
			"name": "chrony-ntp",
			"platform": "linux",
			"ports": [
				"123:123/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Chrony NTP",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/cturra/docker-ntp\" target=\"_blank\">https://github.com/cturra/docker-ntp</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/cturra/docker-ntp/blob/main/README.md\" target=\"_blank\">https://github.com/cturra/docker-ntp/blob/main/README.md</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Anitvirus"
			],
			"description": "ClamAV® is an open source antivirus engine for detecting trojans, viruses, malware & other malicious threats.",
			"image": "mkodockx/docker-clamav:alpine",
			"logo": "http://www.clamav.net/assets/clamav-trademark.png",
			"name": "clamav",
			"platform": "linux",
			"ports": [
				"3310:3310/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Clamav",
			"type": 1,
			"volumes": [
				{
					"bind": "/etc/timezone",
					"container": "/etc/timezone"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				},
				{
					"bind": "/portainer/Files/AppData/Config/clamav/config",
					"container": "/etc/clamav"
				},
				{
					"bind": "/portainer/Files/AppData/Config/clamav/virus_definitions",
					"container": "/var/lib/clamav"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.clamav.net/\" target=\"_blank\">https://docs.clamav.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mkodockx/docker-clamav\" target=\"_blank\">https://hub.docker.com/r/mkodockx/docker-clamav</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_clamav.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_clamav.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"DNS",
				"Tools"
			],
			"description": "Cloudflare DDNS - A small and fast DDNS updater for Cloudflare.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "",
					"label": "CF_API_TOKEN",
					"name": "CF_API_TOKEN"
				},
				{
					"default": "",
					"label": "DOMAINS (Comma Separated List)",
					"name": "DOMAINS"
				},
				{
					"default": "true",
					"label": "PROXIED",
					"name": "PROXIED"
				}
			],
			"image": "favonia/cloudflare-ddns:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
			"name": "cloudflare-ddns",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Cloudflare DDNS",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/favonia/cloudflare-ddns/\" target=\"_blank\">https://github.com/favonia/cloudflare-ddns/</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Another application bookmark dashboard, with fun features.",
			"image": "failed2run/dashmachine:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashmachine_logo.png",
			"name": "dashmachine",
			"platform": "linux",
			"ports": [
				"5100:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "DashMachine",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Dashmachine",
					"container": "/dashmachine/dashmachine/user_data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><br><br>"
		},
		{
			"categories": [
				"Dashboard"
			],
			"description": "Dashy helps you organize your self-hosted services by making them accessible from a single place",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "lissy93/dashy:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashy.png",
			"name": "Dashy",
			"platform": "linux",
			"ports": [
				"9100:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Dashy",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Dashy/local-conf.yml",
					"container": "/app/public/conf.yml"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dashy.to\" target=\"_blank\">https://dashy.to</a><br><b>Official Docker Documentation: </b><a href=\"https://dashy.to/docs/quick-start\" target=\"_blank\">https://dashy.to/docs/quick-start</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_dashy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_dashy.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Tool"
			],
			"description": "DaVinci Resolve Postgresql Server, Davinci requires a specific version of postgres db, this container will install the version needed",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "database",
					"label": "POSTGRES_DB",
					"name": "POSTGRES_DB"
				},
				{
					"default": "postgres",
					"label": "POSTGRES_USER",
					"name": "POSTGRES_USER"
				},
				{
					"default": "DaVinci",
					"label": "POSTGRES_PASSWORD",
					"name": "POSTGRES_PASSWORD"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "postgres:13",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/resolve.png",
			"name": "DaVinci Postgres Server",
			"platform": "linux",
			"ports": [
				"5432:5432/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "DaVinci Postgres Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/DavinciServer/",
					"container": "/var/lib/postgresql/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><b>Official Docker Documentation: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Music"
			],
			"description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
			"image": "registry.gitlab.com/bockiii/deemix-docker:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/deemix.png",
			"name": "deemix",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://deemix.app/\" target=\"_blank\">https://deemix.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://gitlab.com/Bockiii/deemix-docker\" target=\"_blank\">https://gitlab.com/Bockiii/deemix-docker</a><br><br><br>Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to <a href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'>this page</a> for userToken details.",
			"platform": "linux",
			"ports": [
				"9666:6595/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "DeeMix",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/DeeMix",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Dozzle is a real-time log viewer for docker containers.",
			"image": "amir20/dozzle:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dozzle.png",
			"name": "dozzle",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dozzle.dev/\" target=\"_blank\">https://dozzle.dev/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/amir20/dozzle\" target=\"_blank\">https://github.com/amir20/dozzle</a><br><br><br>View logs for docker containers.",
			"platform": "linux",
			"ports": [
				"8888:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Dozzle",
			"type": 1,
			"volumes": [
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Eclipse Mosquitto is an open source message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
			"image": "eclipse-mosquitto:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/eclipse-mosquitto.png",
			"name": "eclipse-mosquitto",
			"platform": "linux",
			"ports": [
				"1883:1883/tcp",
				"9001:9001/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Eclipse Mosquitto MQTT",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/config",
					"container": "/mosquitto/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/data",
					"container": "/mosquitto/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/log",
					"container": "/mosquitto/log"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_mosquitto.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_mosquitto.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Web File Browser which can be used as a middleware or standalone app.",
			"image": "filebrowser/filebrowser:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
			"name": "filebrowser-latest",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
			"platform": "linux",
			"ports": [
				"8082:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser latest",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/srv"
				},
				{
					"bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
					"container": "/database/filebrowser.db"
				},
				{
					"bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
					"container": "/config/settings.json"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "[arm][s6-version] Web File Browser which can be used as a middleware or standalone app.",
			"image": "filebrowser/filebrowser:s6",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
			"name": "filebrowser",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
			"platform": "linux",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"ports": [
				"8082:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser S6",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/srv"
				},
				{
					"bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
					"container": "/database/filebrowser.db"
				},
				{
					"bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
					"container": "/config/settings.json"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
			"env": [
				{
					"default": "",
					"label": "Flame Password",
					"name": "PASSWORD"
				}
			],
			"image": "pawelmalak/flame:multiarch",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/flame.png",
			"name": "Flame",
			"platform": "linux",
			"ports": [
				"5005:5005/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Flame",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Flame/data",
					"container": "/app/data"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/flame\" target=\"_blank\">https://github.com/pawelmalak/flame</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/flame#with-docker-recommended\" target=\"_blank\">https://github.com/pawelmalak/flame#with-docker-recommended</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "FlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.",
			"env": [
				{
					"default": "info",
					"label": "LOG_LEVEL",
					"name": "LOG_LEVEL"
				},
				{
					"default": "false",
					"label": "LOG_HTML",
					"name": "LOG_HTML"
				},
				{
					"default": "none",
					"label": "CAPTCHA_SOLVER",
					"name": "CAPTCHA_SOLVER"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "ghcr.io/flaresolverr/flaresolverr:latest",
			"logo": "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/c48d342b9cfb65d7696b96e9867fcff0ae87a0e2/resources/flaresolverr_logo.svg",
			"name": "FlareSolverr",
			"platform": "linux",
			"ports": [
				"8191:8191/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FlareSolverr",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FlareSolverr/FlareSolverr#installation\" target=\"_blank\">https://github.com/FlareSolverr/FlareSolverr#installation</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Games"
			],
			"description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
			"env": [
				{
					"default": "John",
					"label": "Foundry Account Name",
					"name": "FOUNDRY_USERNAME"
				},
				{
					"default": "password",
					"label": "Foundry Password",
					"name": "FOUNDRY_PASSWORD"
				},
				{
					"default": "changeme",
					"label": "Instance Admin Password",
					"name": "FOUNDRY_ADMIN_KEY"
				},
				{
					"default": "true",
					"label": "CONTAINER_PRESERVE_CONFIG",
					"name": "CONTAINER_PRESERVE_CONFIG"
				}
			],
			"image": "felddy/foundryvtt:release",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
			"name": "FoundryVTT",
			"platform": "linux",
			"ports": [
				"30000:30000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FoundryVTT Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/foundryvtt",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Ghost is a free and open source blogging platform written in JavaScript and distributed under the MIT License, designed to simplify the process of online publishing for individual bloggers as well as online publications.",
			"env": [
				{
					"default": "development",
					"label": "NODE_ENV",
					"name": "NODE_ENV"
				},
				{
					"default": "http://localhost/",
					"label": "url",
					"name": "url"
				}
			],
			"image": "ghost:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ghost.png",
			"name": "ghost",
			"platform": "linux",
			"ports": [
				"2368:2368/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Ghost",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Ghost",
					"container": "/var/lib/ghost/content"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/docker-library/docs/tree/master/ghost\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/ghost</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/ghost\" target=\"_blank\">https://hub.docker.com/_/ghost</a><br><br><br>"
		},
		{
			"categories": [
				"Other"
			],
			"description": "Ghostfolio is a privacy-first, open source dashboard for your personal finances. Break down your asset allocation, know your net worth and make solid, data-driven investment decisions.",
			"env": [
				{
					"default": "ghostfolio_usr",
					"label": "POSTGRES_USER",
					"name": "POSTGRES_USER"
				},
				{
					"default": "r2sp88fzvjnj9e24maycjv6e7kukj8wurcmt",
					"label": "POSTGRES_PASSWORD",
					"name": "POSTGRES_PASSWORD"
				},
				{
					"default": "ghostfolio_db",
					"label": "POSTGRES_DB",
					"name": "POSTGRES_DB"
				},
				{
					"default": "",
					"label": "ALPHA_VANTAGE_API_KEY",
					"name": "ALPHA_VANTAGE_API_KEY"
				},
				{
					"default": "4574k48a355hkcbew7h69xazz694bd32xmze",
					"label": "ACCESS_TOKEN_SALT",
					"name": "ACCESS_TOKEN_SALT"
				},
				{
					"default": "8k8zvx2krrrh7qcsqnsn73e5bvfesupy3b75",
					"label": "JWT_SECRET_KEY",
					"name": "JWT_SECRET_KEY"
				}
			],
			"logo": "https://ghostfol.io/assets/apple-touch-icon.png",
			"name": "ghostfolio",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/ghostfolio.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"restart_policy": "unless-stopped",
			"title": "Ghostfolio",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ghostfol.io/\" target=\"_blank\">https://ghostfol.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ghostfolio/ghostfolio#self-hosting\" target=\"_blank\">https://github.com/ghostfolio/ghostfolio#self-hosting</a><br><br><br>"
		},
		{
			"categories": [
				"Proxy"
			],
			"description": "Simple socks5 server using go-socks5 with authentication options",
			"image": "serjs/go-socks5-proxy:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/socks5.png",
			"name": "socks5-proxy",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Go-Socks5-Proxy",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IWj1-j2QWvo target=\"_blank\">Novaspirit Tech - Route Docker Traffic Through VPN Container</a><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A simple server for sending and receiving messages",
			"env": [
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "admin",
					"label": "GOTIFY_DEFAULTUSER_NAME",
					"name": "GOTIFY_DEFAULTUSER_NAME"
				},
				{
					"default": "admin123",
					"label": "GOTIFY_DEFAULTUSER_PASS",
					"name": "GOTIFY_DEFAULTUSER_PASS"
				}
			],
			"image": "gotify/server-arm7:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gotify.png",
			"name": "gotify",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gotify.net/\" target=\"_blank\">https://gotify.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://gotify.net/docs/install\" target=\"_blank\">https://gotify.net/docs/install</a><br><br><br>ARM7 Image. Documentation is Available <a href='https://gotify.net/docs/index'>here</a>.",
			"platform": "linux",
			"ports": [
				"9008:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Gotify",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/gotify",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Monitor",
				"Tools"
			],
			"description": "Grafana Dashboard anything. Observe everything.  Query, visualize, alert on, and understand your data no matter where it’s stored. With Grafana you can create, explore, and share all of your data through beautiful, flexible dashboards.",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/grafana.png",
			"name": "grafana",
			"platform": "linux",
			"ports": [
				"3030:3000/tcp"
			],
			"repository": {
				"stackfile": "stack/grafana.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"restart_policy": "unless-stopped",
			"title": "Grafana",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://grafana.com/grafana/\" target=\"_blank\">https://grafana.com/grafana/</a><br><b>Official Docker Documentation: </b><a href=\"https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/\" target=\"_blank\">https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_grafana.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_grafana.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A clientless remote desktop gateway.",
			"image": "oznu/guacamole:armhf",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/guacamole.png",
			"name": "guacamole",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://guacamole.apache.org/\" target=\"_blank\">https://guacamole.apache.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oznu/guacamole\" target=\"_blank\">https://hub.docker.com/r/oznu/guacamole</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=cKAhnf8X1lo&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=3 target=\"_blank\">Novaspirit Tech - Manually Installing Guacamole on Portainer</a><br><br>The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Guacamole",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Guacamole",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version is not secured and should only be used if you want Docker integration and you don't worry about users on your network.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "ghcr.io/ajnart/homarr:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
			"name": "homarr",
			"platform": "linux",
			"ports": [
				"7575:7575/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Homarr/configs",
					"container": "/app/data/configs"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Homarr/icons",
					"container": "/app/public/icons"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version does not allow for interaction with the docker environment for security purposes.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "ghcr.io/ajnart/homarr:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
			"name": "homarr-secured",
			"platform": "linux",
			"ports": [
				"7575:7575/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homarr-Secured",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Homarr/configs",
					"container": "/app/data/configs"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Homarr/icons",
					"container": "/app/public/icons"
				}
			]
		},
		{
			"description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
			"image": "homeassistant/home-assistant:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homeassistant.png",
			"name": "home-assistant",
			"platform": "linux",
			"ports": [
				"8999:8123/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Home Assistant",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.home-assistant.io/\" target=\"_blank\">https://www.home-assistant.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container\" target=\"_blank\">https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container</a><br><br><br>"
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
			"env": [
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1",
					"label": "HOMEBRIDGE_CONFIG_UI",
					"name": "HOMEBRIDGE_CONFIG_UI"
				},
				{
					"default": "8581",
					"label": "HOMEBRIDGE_CONFIG_UI_PORT",
					"name": "HOMEBRIDGE_CONFIG_UI_PORT"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "homebridge/homebridge:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
			"name": "homebridge",
			"network": "host",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
			"platform": "linux",
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Homebridge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/homebridge",
					"container": "/homebridge"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Debian Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
			"env": [
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1",
					"label": "HOMEBRIDGE_CONFIG_UI",
					"name": "HOMEBRIDGE_CONFIG_UI"
				},
				{
					"default": "8581",
					"label": "HOMEBRIDGE_CONFIG_UI_PORT",
					"name": "HOMEBRIDGE_CONFIG_UI_PORT"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "homebridge/homebridge:ubuntu-arm32v7",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
			"name": "homebridge-debian",
			"network": "host",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
			"platform": "linux",
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Homebridge - Debian",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/debian-homebridge",
					"container": "/homebridge"
				}
			]
		},
		{
			"categories": [
				"Dashboard"
			],
			"description": "Homepage helps you organize your self-hosted services by making them accessible from a single place",
			"image": "ghcr.io/benphelps/homepage:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homepage.png",
			"name": "Homepage",
			"platform": "linux",
			"ports": [
				"3015:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homepage",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Homepage/",
					"container": "/app/config"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A dead simple static HOMepage for your servER to keep your services on hand, from a simple yaml configuration file.",
			"env": [
				{
					"default": "1000",
					"label": "GID",
					"name": "GID"
				},
				{
					"default": "1000",
					"label": "UID",
					"name": "UID"
				}
			],
			"image": "b4bz/homer:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homer.png",
			"name": "homer",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/bastienwirtz/homer\" target=\"_blank\">https://github.com/bastienwirtz/homer</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md\" target=\"_blank\">https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_homer.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_homer.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=_d3J88ootYo&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=2 target=\"_blank\">Novaspirit Tech - Installing and Configuring Homer Dashboard</a><br><br>This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
			"platform": "linux",
			"ports": [
				"8902:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homer",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Homer/assets",
					"container": "/www/assets"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Create agents that monitor and act on your behalf.",
			"image": "mjysci/huginn:arm32v7",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/huginn.png",
			"name": "huginn",
			"platform": "linux",
			"ports": [
				"3005:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Huginn",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/huginn",
					"container": "/var/lib/mysql"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/huginn/huginn\" target=\"_blank\">https://github.com/huginn/huginn</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/huginn/huginn/tree/master/docker\" target=\"_blank\">https://github.com/huginn/huginn/tree/master/docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "InfluxDB is an open source time series database for recording metrics, events, and analytics.",
			"hostname": "rpi-influxdb1810",
			"image": "influxdb:1.8.10",
			"logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
			"name": "influxdb1810",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.influxdata.com/\" target=\"_blank\">https://www.influxdata.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker\" target=\"_blank\">https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker</a><br><br><br>You will need to add /portainer/Files/AppData/Config/Influxdb/config/influxdb.conf",
			"platform": "linux",
			"ports": [
				"8086:8086/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Influxdb 1.8.10",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Influxdb/data",
					"container": "/var/lib/influxdb"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Influxdb/config",
					"container": "/etc/influxdb"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "IoBroker is a open source IoT platform written in JavaScript that easily connects smarthome components from different manufactures. With the help of plugins (called: adapters) ioBroker is able to communicate with a big variety of IoT hardware and services using different protocols and APIs.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "buanet/iobroker:latest",
			"logo": "https://github.com/buanet/ioBroker.docker/raw/main/docs/img/iobroker_logo.png",
			"name": "iobroker",
			"platform": "linux",
			"ports": [
				"8081:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "iobroker",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/iobrokerdata",
					"container": "/opt/iobroker"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/buanet/ioBroker.docker\" target=\"_blank\">https://github.com/buanet/ioBroker.docker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/buanet/ioBroker.docker\" target=\"_blank\">https://github.com/buanet/ioBroker.docker</a><br><br><br>"
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "JDownloader docker image",
			"env": [
				{
					"default": "",
					"label": "MYJD_DEVICE_NAME",
					"name": "MYJD_DEVICE_NAME"
				},
				{
					"default": "",
					"label": "MYJD_USER",
					"name": "MYJD_USER"
				},
				{
					"default": "",
					"label": "MYJD_PASSWORD",
					"name": "MYJD_PASSWORD"
				}
			],
			"image": "jaymoulin/jdownloader:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
			"name": "JDownloader",
			"platform": "linux",
			"ports": [
				"3129:3129/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "JDownloader",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/JDownloader",
					"container": "/opt/JDownloader/app/cfg"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/opt/JDownloader/Downloads"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://my.jdownloader.org/\" target=\"_blank\">https://my.jdownloader.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/jaymoulin/docker-jdownloader\" target=\"_blank\">https://github.com/jaymoulin/docker-jdownloader</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>"
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos",
				"Management"
			],
			"description": "jfa-go is a user management app for Jellyfin (and now Emby) that provides invite-based account creation as well as other features that make one's instance much easier to manage.",
			"image": "hrfee/jfa-go:latest",
			"logo": "https://github.com/hrfee/jfa-go/raw/main/images/jfa-go-icon.png",
			"name": "jfa-go",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://jfa-go.com/\" target=\"_blank\">https://jfa-go.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.jfa-go.com/\" target=\"_blank\">https://wiki.jfa-go.com/</a><br><br><br>This system is setup to work with either Emby or Jellyfin out of the box.  During the initial setup the user will have the option of which server they will be administering.",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Jellyfin-Accounts",
			"type": 1,
			"network": "bridge",
			"ports": [
				"8056:8056/tcp"
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Jelllyfin",
					"container": "/jf"
				},
				{
					"bind": "/portainer/Files/AppData/Config/jfago",
					"container": "/data"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime",
					"readonly": true
				}
			]
		},
		{
			"categories": [
				"Library",
				"Books"
			],
			"description": "Kavita is a fast, feature rich, cross platform reading server.",
			"image": "kizaing/kavita:latest",
			"logo": "https://raw.githubusercontent.com/Kareadita/Kavita/develop/Logo/kavita.svg",
			"name": "Kavita",
			"platform": "linux",
			"ports": [
				"5002:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Kavita",
			"type": 1,
			"env": [
				{
					"default": "Your/Timezone",
					"label": "Timezone",
					"name": "TZ"
				}
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Kavita/manga",
					"container": "/manga"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Kavita/comics",
					"container": "/comics"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Kavita/books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Kavita/config",
					"container": "/kavita/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.kavitareader.com/#home\" target=\"_blank\">https://www.kavitareader.com/#home</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.kavitareader.com/en/install/docker-install\" target=\"_blank\">https://wiki.kavitareader.com/en/install/docker-install</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"3d-printers",
				"Tools"
			],
			"description": "Klipper is a 3d-Printer firmware. It combines the power of a general purpose computer with one or more micro-controllers. See the features document for more information on why you should use Klipper.",
			"env": [
				{
					"default": "/dev/ttymxc3",
					"label": "3D_PRINTER_DEVICE",
					"name": "3D_PRINTER_DEVICE"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/drupal.png",
			"name": "klipper-mainsail-moonraker",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mkuf/klipper\" target=\"_blank\">https://hub.docker.com/r/mkuf/klipper</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mkuf/klipper\" target=\"_blank\">https://hub.docker.com/r/mkuf/klipper</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_klipper.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_klipper.sh | bash</h3><br><br>First you will need to download a printer.conf file from https://github.com/Klipper3d/klipper/tree/master/config and copy it to ",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/klipper.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"restart_policy": "unless-stopped",
			"title": "Klipper[Testing], Mainsail, Moonraker",
			"type": 3
		},
		{
			"categories": [
				"Video"
			],
			"description": "[DEPRECATED] Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "lsioarmhf/kodi-headless:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/kodi-icon.png",
			"name": "kodi-headless",
			"platform": "linux",
			"ports": [
				"8081:8080/tcp",
				"9090:9090/tcp",
				"9777:9777/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Kodi Headless",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Kodi",
					"container": "/config/.kodi"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://kodi.tv/\" target=\"_blank\">https://kodi.tv/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/lsioarmhf/kodi-headless-aarch64/\" target=\"_blank\">https://hub.docker.com/r/lsioarmhf/kodi-headless-aarch64/</a><br><br><br>"
		},
		{
			"categories": [
				"Books",
				"Tools"
			],
			"description": "Komga is a free and open source comics/mangas/magazines server.",
			"image": "gotson/komga:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/komga.png",
			"name": "komga",
			"platform": "linux",
			"ports": [
				"8995:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Komga",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/komga/config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/komga/data",
					"container": "/data"
				},
				{
					"bind": "/etc/timezone",
					"container": "/etc/timezone",
					"read_only": "true"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/gotson/komga\" target=\"_blank\">https://github.com/gotson/komga</a><br><b>Official Docker Documentation: </b><a href=\"https://komga.org/\" target=\"_blank\">https://komga.org/</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "An alternative private front-end to Reddit",
			"image": "libreddit/libreddit:armv7",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/libreddit.png",
			"name": "libreddit",
			"platform": "linux",
			"ports": [
				"8088:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "libreddit",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/libreddit",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://libreddit.silkky.cloud/\" target=\"_blank\">https://libreddit.silkky.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/spikecodes/libreddit#2-docker\" target=\"_blank\">https://github.com/spikecodes/libreddit#2-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Tools",
				"Productivity"
			],
			"description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication.",
			"env": [
				{
					"default": "somesecretjwt",
					"label": "LLDAP_JWT_SECRET",
					"name": "LLDAP_JWT_SECRET"
				},
				{
					"default": "someadminpassword",
					"label": "LLDAP_LDAP_USER_PASS",
					"name": "LLDAP_LDAP_USER_PASS"
				},
				{
					"default": "dc=example,dc=com",
					"label": "LLDAP_LDAP_BASE_DN",
					"name": "LLDAP_LDAP_BASE_DN"
				}
			],
			"image": "nitnelave/lldap:stable-debian",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lldap.png",
			"name": "LLDAP",
			"platform": "linux",
			"ports": [
				"3890:3890/tcp",
				"17170:17170/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "LLDAP",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/lldap/data",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_lldap.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_lldap.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Music"
			],
			"description": "Simple self-hosted music scrobble database to create personal listening statistics. No recommendations, no social network, no nonsense.",
			"env": [
				{
					"default": "malojapassword",
					"label": "MALOJA_FORCE_PASSWORD",
					"name": "MALOJA_FORCE_PASSWORD"
				},
				{
					"default": "/data",
					"label": "MALOJA_DATA_DIRECTORY",
					"name": "MALOJA_DATA_DIRECTORY"
				}
			],
			"image": "krateng/maloja:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/maloja.png",
			"name": "maloja",
			"platform": "linux",
			"ports": [
				"42010:42010/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Maloja",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Maloja/Data",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/krateng/maloja\" target=\"_blank\">https://github.com/krateng/maloja</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/krateng/maloja/blob/master/README.md\" target=\"_blank\">https://github.com/krateng/maloja/blob/master/README.md</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_maloja.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_maloja.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A self-hosted recipe manager and meal planner",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "2",
					"label": "WEB_CONCURRENCY",
					"name": "WEB_CONCURRENCY"
				},
				{
					"default": "8",
					"label": "MAX_WORKERS",
					"name": "MAX_WORKERS"
				},
				{
					"default": "true",
					"label": "RECIPE_PUBLIC",
					"name": "RECIPE_PUBLIC"
				},
				{
					"default": "true",
					"label": "RECIPE_SHOW_NUTRITION",
					"name": "RECIPE_SHOW_NUTRITION"
				},
				{
					"default": "true",
					"label": "RECIPE_SHOW_ASSETS",
					"name": "RECIPE_SHOW_ASSETS"
				},
				{
					"default": "true",
					"label": "RECIPE_LANDSCAPE_VIEW",
					"name": "RECIPE_LANDSCAPE_VIEW"
				},
				{
					"default": "false",
					"label": "RECIPE_DISABLE_COMMENTS",
					"name": "RECIPE_DISABLE_COMMENTS"
				},
				{
					"default": "false",
					"label": "RECIPE_DISABLE_AMOUNT",
					"name": "RECIPE_DISABLE_AMOUNT"
				}
			],
			"image": "hkotel/mealie:v0.4.3",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mealie.png",
			"name": "mealie",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hay-kot.github.io/mealie/\" target=\"_blank\">https://hay-kot.github.io/mealie/</a><br><b>Official Docker Documentation: </b><a href=\"https://hay-kot.github.io/mealie/documentation/getting-started/install/\" target=\"_blank\">https://hay-kot.github.io/mealie/documentation/getting-started/install/</a><br><br><br>Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available <a href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'>here</a>.",
			"platform": "linux",
			"ports": [
				"9925:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Mealie",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/mealie",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Downloader"
			],
			"description": "Web GUI for youtube-dl (using the yt-dlp fork) with playlist support. Allows you to download videos from YouTube and dozens of other sites (https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "alexta69/metube:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/metube.png",
			"name": "MeTube",
			"platform": "linux",
			"ports": [
				"8081:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "MeTube",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/alexta69/metube\" target=\"_blank\">https://hub.docker.com/r/alexta69/metube</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/alexta69/metube\" target=\"_blank\">https://github.com/alexta69/metube</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Games"
			],
			"description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
			"env": [
				{
					"default": "TRUE",
					"label": "EULA",
					"name": "EULA"
				}
			],
			"image": "itzg/minecraft-server:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/minecraft.png",
			"name": "minecraft",
			"platform": "linux",
			"ports": [
				"25565:25565/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Minecraft Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Minecraft-data",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.minecraft.net/en-us\" target=\"_blank\">https://www.minecraft.net/en-us</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/itzg/docker-minecraft-server#using-docker-compose\" target=\"_blank\">https://github.com/itzg/docker-minecraft-server#using-docker-compose</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"command": "server --console-address ':9090' /data",
			"description": "MinIO is a High Performance Object Storage released under GNU Affero GPL v3.0. It is API compatible with Amazon S3 cloud storage service.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "ROOTUSER",
					"label": "MINIO_ROOT_USER",
					"name": "MINIO_ROOT_USER"
				},
				{
					"default": "CHANGEME123",
					"label": "MINIO_ROOT_PASSWORD",
					"name": "MINIO_ROOT_PASSWORD"
				},
				{
					"default": "",
					"label": "MINIO_SERVER_URL",
					"name": "MINIO_SERVER_URL",
					"description": "URL hostname for MinIO Console if any"
				}
			],
			"image": "minio/minio:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/minio.png",
			"name": "minio",
			"platform": "linux",
			"ports": [
				"8760:9000/tcp",
				"8761:9090/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "MinIO",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/MinIO",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://min.io/\" target=\"_blank\">https://min.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.min.io/minio/baremetal/quickstart/quickstart.html\" target=\"_blank\">https://docs.min.io/minio/baremetal/quickstart/quickstart.html</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Voice",
				"Chat"
			],
			"description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "yhaenggi/murmur:1.3.4",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/Mumble-logo.png",
			"name": "murmur",
			"platform": "linux",
			"ports": [
				"64738:64738/tcp",
				"64738:64738/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Murmur",
			"type": 1,
			"volumes": [
				{
					"bind": "/etc/localtime:ro",
					"container": "/etc/localtime"
				},
				{
					"bind": "/portainer/Files/Config/Murmur",
					"container": "/opt/murmur/config"
				},
				{
					"bind": "/portainer/Files/Murmur/data",
					"container": "/opt/murmur/data"
				},
				{
					"bind": "/portainer/Files/Murmur/log",
					"container": "/opt/murmur/log"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.mumble.info/\" target=\"_blank\">https://www.mumble.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/yhaenggi/murmur-docker\" target=\"_blank\">https://github.com/yhaenggi/murmur-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "n8n is an extendable workflow automation tool.",
			"env": [
				{
					"default": "true",
					"label": "N8N_BASIC_AUTH_ACTIVE",
					"name": "N8N_BASIC_AUTH_ACTIVE"
				},
				{
					"default": "admin",
					"label": "N8N_BASIC_AUTH_USER",
					"name": "N8N_BASIC_AUTH_USER"
				},
				{
					"default": "admin",
					"label": "N8N_BASIC_AUTH_PASSWORD",
					"name": "N8N_BASIC_AUTH_PASSWORD"
				}
			],
			"image": "n8nio/n8n:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/n8n.jpg",
			"name": "n8n",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://n8n.io/\" target=\"_blank\">https://n8n.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.n8n.io/getting-started/installation/#docker\" target=\"_blank\">https://docs.n8n.io/getting-started/installation/#docker</a><br><br><br>Documentation is Available <a href='https://docs.n8n.io/'>here</a>",
			"platform": "linux",
			"ports": [
				"5678:5678/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "n8n",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/n8n",
					"container": "/home/node/.n8n"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
			"env": [
				{
					"default": "1000",
					"label": "DOCKER_USR",
					"name": "DOCKER_USR"
				},
				{
					"default": "1000",
					"label": "DOCKER_GRP",
					"name": "DOCKER_GRP"
				}
			],
			"image": "netdata/netdata:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/netdata.png",
			"name": "netdata",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.netdata.cloud/\" target=\"_blank\">https://www.netdata.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://learn.netdata.cloud/docs/agent/packaging/docker\" target=\"_blank\">https://learn.netdata.cloud/docs/agent/packaging/docker</a><br><br><br>Documentation is Available <a href='https://learn.netdata.cloud/'>here</a>.",
			"platform": "linux",
			"ports": [
				"19999:19999/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Netdata",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/netdata/netdataconfig",
					"container": "/etc/netdata"
				},
				{
					"bind": "/portainer/Files/AppData/Config/netdata/netdatalib",
					"container": "/var/lib/netdata"
				},
				{
					"bind": "/etc/passwd",
					"container": "/host/etc/passwd:ro"
				},
				{
					"bind": "/etc/group",
					"container": "/host/etc/group:ro"
				},
				{
					"bind": "/proc",
					"container": "/host/proc:ro"
				},
				{
					"bind": "/sys",
					"container": "/host/sys:ro"
				},
				{
					"bind": "/etc/os-release",
					"container": "/host/etc/os-release:ro"
				}
			]
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "Nginx Proxy Manager v2 with sqlite and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "false",
					"label": "SKIP_ARCHIVED_LOGS",
					"name": "SKIP_ARCHIVED_LOGS",
					"description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
				},
				{
					"default": "false",
					"label": "BASIC_AUTH",
					"name": "BASIC_AUTH",
					"description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
				},
				{
					"default": "user",
					"label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
					"name": "BASIC_AUTH_USERNAME",
					"description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
				},
				{
					"default": "Password",
					"label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
					"name": "BASIC_AUTH_PASSWORD",
					"description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
			"name": "nginx-proxy-manager-sqllite-goaccess",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"81:81/tcp",
				"443:443/tcp",
				"7880:7880/tcp"
			],
			"repository": {
				"stackfile": "stack/nginx-proxy-manager-sqlite-goaccess.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager v2 with Sqlite and Goaccess Charts",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#running-the-app\" target=\"_blank\">https://nginxproxymanager.com/setup/#running-the-app</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "Nginx Proxy Manager v2 with Sqlite enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "jc21/nginx-proxy-manager:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
			"name": "nginx-proxy-manager-sqlite",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"81:81/tcp",
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager v2 with Sqllite",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/data",
					"container": "/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/letsencrypt",
					"container": "/etc/letsencrypt"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/\" target=\"_blank\">https://nginxproxymanager.com/setup/</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "[DEVEL] Not ready for production.  Nginx Proxy Manager v3 Develop enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "jc21/nginx-proxy-manager:v3-develop",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
			"name": "nginx-proxy-manager-v3",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"81:81/tcp",
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager v3 [DEVEL] NOT READY FOR USE",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/nginx-proxy-manager-v3/data",
					"container": "/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/\" target=\"_blank\">https://nginxproxymanager.com/setup/</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Web"
			],
			"description": "A free and open source alternative Twitter front-end focused on privacy and performance.",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/nitter.png",
			"name": "nitter",
			"repository": {
				"stackfile": "stack/nitter.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Nitter",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nitter.net/\" target=\"_blank\">https://nitter.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/zedeus/nitter\" target=\"_blank\">https://github.com/zedeus/nitter</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Web",
				"Tools"
			],
			"description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
			"env": [
				{
					"default": "your_secret_goes_here",
					"label": "NODE_RED_CREDENTIAL_SECRET",
					"name": "NODE_RED_CREDENTIAL_SECRET"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/node-red.png",
			"name": "node-red",
			"platform": "linux",
			"ports": [
				"1880:1880/tcp"
			],
			"repository": {
				"stackfile": "stack/node-red.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"restart_policy": "unless-stopped",
			"title": "Node Red",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nodered.org/\" target=\"_blank\">https://nodered.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://nodered.org/docs/getting-started/docker\" target=\"_blank\">https://nodered.org/docs/getting-started/docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other"
			],
			"description": "This is an OpenVPN client docker container that uses recommended NordVPN server. It makes routing containers traffic through OpenVPN easy.",
			"env": [
				{
					"default": "user@email.com",
					"label": "NordVPN user",
					"name": "USER"
				},
				{
					"default": "password",
					"label": "NordVPN password",
					"name": "PASS"
				},
				{
					"default": "Spain;Hong Kong;IE;131",
					"label": "Countries to connect to (see webpage readme)",
					"name": "COUNTRY"
				},
				{
					"default": "Standard VPN servers",
					"label": "Group name filter to which to connect to",
					"name": "GROUP"
				},
				{
					"default": "10",
					"label": "Range of servers to pick from the top",
					"name": "RANDOM_TOP"
				},
				{
					"default": "5 */3 * * *",
					"label": "Define when to look again for new defined servers",
					"name": "RECREATE_VPN_CRON"
				},
				{
					"default": "https://www.google.com",
					"label": "URL to check internet connection is working to",
					"name": "CHECK_CONNECTION_URL"
				},
				{
					"default": "192.168.1.0/24;192.168.2.0/24",
					"label": "Subnet to define network access (read Local Network access to services connecting to the internet through the VPN readme to get the right subnet!)",
					"name": "NETWORK"
				},
				{
					"default": "--mute-replay-warnings",
					"label": "Used to pass extra parameters to openvpn",
					"name": "OPENVPN_OPTS"
				}
			],
			"image": "azinchen/nordvpn:latest",
			"logo": "https://s3.us-east-2.amazonaws.com/ccp-prd-s3-uploads/2022/3/8/03500108885898f010e823eeb284e393b99e1ad5.png",
			"name": "nord-vpn",
			"platform": "linux",
			"ports": [
				"8080:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "nord-vpn",
			"type": 1,
			"privileged": true,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/azinchen/nordvpn\" target=\"_blank\">https://github.com/azinchen/nordvpn</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/azinchen/nordvpn\" target=\"_blank\">https://hub.docker.com/r/azinchen/nordvpn</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "The purpose of NUT Server is to monitor a UPS attached device",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "none",
					"label": "SERIAL",
					"name": "SERIAL"
				},
				{
					"default": "none",
					"label": "NAME",
					"name": "NAME"
				},
				{
					"default": "none",
					"label": "VENDOR ID",
					"name": "VENDOR ID"
				},
				{
					"default": "none",
					"label": "API_PASSWORD",
					"name": "API_PASSWORD"
				},
				{
					"default": "none",
					"label": "DESCRIPTION",
					"name": "DESCRIPTION"
				}
			],
			"image": "instantlinux/nut-upsd:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/nut-server.png",
			"name": "NUT Server",
			"platform": "linux",
			"ports": [
				"3493:3493/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "NUT Server",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://networkupstools.org\" target=\"_blank\">https://networkupstools.org</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/instantlinux/nut-upsd\" target=\"_blank\">https://hub.docker.com/r/instantlinux/nut-upsd</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "OctoPrint is an open source 3D printer controller application, which provides a web interface for the connected printers.",
			"env": [
				{
					"default": "development ",
					"label": "NODE_ENV",
					"name": "NODE_ENV"
				},
				{
					"default": "true",
					"label": "ENABLE_MJPG_STREAMER",
					"name": "ENABLE_MJPG_STREAMER"
				}
			],
			"image": "octoprint/octoprint:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/octoprint.png",
			"name": "octoprint",
			"platform": "linux",
			"ports": [
				"8051:80/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "OctoPrint",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/OctoPrint",
					"container": "/octoprint"
				},
				{
					"bind": "/dev",
					"container": "/dev"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://octoprint.org/\" target=\"_blank\">https://octoprint.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/octoprint/octoprint\" target=\"_blank\">https://hub.docker.com/r/octoprint/octoprint</a><br><br><br>"
		},
		{
			"categories": [
				"Management",
				"Tools"
			],
			"description": "TP-Link Omada is a software-defined network solution. The EAP Controller is used to manage multiple EAPs. Raspberry Pi 1 and Zero are not supported.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "mbentley/omada-controller:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/omada.png",
			"name": "omada-controller",
			"platform": "linux",
			"ports": [
				"8088:8088/tcp",
				"8043:8043/tcp",
				"27001:27001/udp",
				"27002:27002/tcp",
				"29810:29810/udp",
				"29811:29811/tcp",
				"29812:29812/tcp",
				"29813:29813/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Omada EAP Controller",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Omada",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.tp-link.com/us/business-networking/omada-sdn-controller/\" target=\"_blank\">https://www.tp-link.com/us/business-networking/omada-sdn-controller/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mbentley/omada-controller\" target=\"_blank\">https://hub.docker.com/r/mbentley/omada-controller</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "organizr/organizr:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/organizr-icon.png",
			"name": "organizr-v2",
			"platform": "linux",
			"ports": [
				"7171:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Organizr v2",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Organizr",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://organizr.app/\" target=\"_blank\">https://organizr.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/organizr/organizr\" target=\"_blank\">https://hub.docker.com/r/organizr/organizr</a><br><br><br>"
		},
		{
			"categories": [
				"Cloud",
				"Management",
				"Productivity"
			],
			"description": "Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper.  Paperless-ngx forked from paperless-ng to continue the great work and distribute responsibility of supporting and advancing the project among a team of people. Consider joining us! Discussion of this transition can be found in issues #1599 and #1632.  A demo is available at demo.paperless-ngx.com using login demo / demo. Note: demo content is reset frequently and confidential information should not be uploaded.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID",
					"description": "for UserID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID",
					"description": "for GroupID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ",
					"description": "Specify a timezone to use for example America/New_York"
				},
				{
					"default": "",
					"label": "PAPERLESS_URL",
					"name": "PAPERLESSURL",
					"description": "Example https://paperless.example.com.  It would be best to run this behind a reverse proxy"
				},
				{
					"default": "",
					"label": "Administrator username",
					"name": "ADMIN_USER",
					"description": "Set the name of the default admin user."
				},
				{
					"default": "",
					"label": "Administrator password",
					"name": "ADMIN_PASS",
					"description": "Set the password of the default admin user."
				},
				{
					"default": "",
					"label": "Secret Key",
					"name": "RANDOMKEY",
					"description": "This should be a very long sequence of random characters."
				},
				{
					"default": "eng",
					"label": "OCR Language",
					"name": "LANG",
					"description": "The default language to use for OCR"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/paperless.png",
			"name": "paperless-ngx",
			"repository": {
				"stackfile": "stack/paperless-ngx.yml",
				"url": "https://github.com/pi-hosted/pi-hosted/"
			},
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Paperless NGX",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/paperless-ngx/paperless-ngx\" target=\"_blank\">https://github.com/paperless-ngx/paperless-ngx</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/paperless-ngx/paperless-ngx\" target=\"_blank\">https://github.com/paperless-ngx/paperless-ngx</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Passbolt is a free and open source password manager designed for collaboration. With Passbolt you can securely generate, store, manage and monitor your team credentials. Get access to all of your logins and passwords from multiple browsers or even your mobile phone.",
			"env": [
				{
					"default": "1000",
					"description": "Enter your user's PUID here",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"description": "Enter your user's PGID here",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "Europe/Zurich",
					"description": "Enter your time zone here. See examples https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "",
					"description": "Enter your MySql root password here",
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				},
				{
					"default": "passbolt",
					"description": "Enter your Passbolt database name here",
					"label": "MYSQL_DATABASE",
					"name": "MYSQL_DATABASE"
				},
				{
					"default": "passbolt",
					"description": "Enter your Passbolt database user here",
					"label": "MYSQL_USER",
					"name": "MYSQL_USER"
				},
				{
					"default": "",
					"description": "Enter your Passbolt database password here",
					"label": "MYSQL_PASSWORD",
					"name": "MYSQL_PASSWORD"
				},
				{
					"default": "443",
					"description": "Enter your Passbolt https port here",
					"label": "PASSBOLT_PORT",
					"name": "PASSBOLT_PORT"
				},
				{
					"default": "https://passbolt.local",
					"description": "Enter your full Passbolt https base URL here. Including port if different from 443",
					"label": "PASSBOLT_URL",
					"name": "PASSBOLT_URL"
				},
				{
					"default": "Passbolt",
					"description": "Enter your from email name",
					"label": "EMAIL_FROM_NAME",
					"name": "EMAIL_FROM_NAME"
				},
				{
					"default": "",
					"description": "Enter your from email address",
					"label": "EMAIL_FROM_ADDRESS",
					"name": "EMAIL_FROM_ADDRESS"
				},
				{
					"default": "smtp.gmail.com",
					"description": "Enter your email smtp server here",
					"label": "EMAIL_SMTP_SERVER",
					"name": "EMAIL_SMTP_SERVER"
				},
				{
					"default": "587",
					"description": "Enter your email smtp port here",
					"label": "EMAIL_SMTP_PORT",
					"name": "EMAIL_SMTP_PORT"
				},
				{
					"default": "",
					"description": "Enter your email username here",
					"label": "EMAIL_USERNAME",
					"name": "EMAIL_USERNAME"
				},
				{
					"default": "",
					"description": "Enter your email password here",
					"label": "EMAIL_PASSWORD",
					"name": "EMAIL_PASSWORD"
				},
				{
					"default": "true",
					"description": "Enter set TLS here",
					"label": "EMAIL_TLS",
					"name": "EMAIL_TLS"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/passbolt.png",
			"name": "Passbolt",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/passbolt.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"restart_policy": "unless-stopped",
			"title": "Passbolt",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/passbolt.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/passbolt.md</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/passbolt.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/passbolt.md</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/passbolt.md\" target=\"_blank\">passbolt.md</a></h3><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "PGAdmin is a web-based GUI tool used to interact with the Postgres database sessions, both locally and remote servers as well. You can use PGAdmin to perform any sort of database administration required for a Postgres database.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "",
					"label": "PGADMIN_DEFAULT_EMAIL",
					"name": "PGADMIN_DEFAULT_EMAIL"
				},
				{
					"default": "",
					"label": "PGADMIN_DEFAULT_PASSWORD",
					"name": "PGADMIN_DEFAULT_PASSWORD"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "dpage/pgadmin4:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pgadmin.png",
			"name": "pgadmin",
			"platform": "linux",
			"ports": [
				"5050:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "pgAdmin",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/pgadmin",
					"container": "/var/lib/pgadmin"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.pgadmin.org/\" target=\"_blank\">https://www.pgadmin.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html\" target=\"_blank\">https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_pgadmin.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_pgadmin.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
			"image": "pihole/pihole:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole.png",
			"name": "pihole",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hole/docker-pi-hole/#running-pi-hole-docker\" target=\"_blank\">https://github.com/pi-hole/docker-pi-hole/#running-pi-hole-docker</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a></h3><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. If you like to use Pi-Hole's built in DHCP-Server change the Network type to host and open advance options and scroll to Labels and add: NET_ADMIN with the value True. When you do so, specify a port is no more needed, navigate to your.ip.goes.here/admin.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
			"image": "oijkn/pihole-doh-dot:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole_doh-dot.png",
			"name": "pihole DoH/DoT",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oijkn/pihole-doh-dot\" target=\"_blank\">https://hub.docker.com/r/oijkn/pihole-doh-dot</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a></h3><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. If you like to use Pi-Hole's built in DHCP-Server change the Network type to host and open advance options and scroll to Labels and add: NET_ADMIN with the value True. When you do so, specify a port is no more needed, navigate to your.ip.goes.here/admin.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole DoH/DoT",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole. This version has Ubound software installed on it so you don't need to rely on external DNS providers. When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a>",
			"env": [
				{
					"default": "192.168.0.X",
					"description": "Insert the Raspberry Pi IP here",
					"label": "ServerIP",
					"name": "ServerIP"
				},
				{
					"default": "Europe\\London",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "DNSSEC",
					"name": "DNSSEC",
					"select": [
						{
							"default": true,
							"text": "Enable DNSSEC",
							"value": "true"
						},
						{
							"text": "Disable DNSSEC",
							"value": "false"
						}
					]
				},
				{
					"default": "127.0.0.1#5335",
					"label": "DNS1",
					"name": "DNS1",
					"preset": true
				},
				{
					"default": "127.0.0.1#5335",
					"label": "DNS2",
					"name": "DNS2",
					"preset": true
				}
			],
			"image": "cbcrowe/pihole-unbound:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole-unbound.png",
			"name": "pihole-unbound",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container\" target=\"_blank\">https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a></h3><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. For extra information on this container visit the mainteiner <a href='https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container'>GitHub Page</a>. You can add ports: 5335 to access Ubound externally; 22 to enable SSH; 67 to use DHCP Server. Add those ports in Show advanced options. if you run into issues binding to port 53. If you like to use Pi-Hole's built in DHCP-Server change the Network type to host and open advance options and scroll to Labels and add: NET_ADMIN with the value True. When you do so, specify a port is no more needed, navigate to your.ip.goes.here/admin.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole-Unbound",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole-Unbound",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole-Unbound/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Photos"
			],
			"description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/piwigo:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/piwigo-icon.png",
			"name": "piwigo",
			"platform": "linux",
			"ports": [
				"7528:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Piwigo",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiWigo",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"http://piwigo.org/\" target=\"_blank\">http://piwigo.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-piwigo\" target=\"_blank\">https://docs.linuxserver.io/images/docker-piwigo</a><br><br><br>"
		},
		{
			"categories": [
				"Other"
			],
			"description": "Wireless control of PixelStrips or NeoPixels using a web graphical interface running on a Raspberry Pi.",
			"image": "macley/pixel-server:latest",
			"logo": "https://lirp.cdn-website.com/c73f56a6/dms3rep/multi/opt/ir.appnice.controlpad_512x512-640w.png",
			"name": "pixel-server",
			"platform": "linux",
			"ports": [
				"85:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pixel-server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/pixel-server/auth.cfg",
					"container": "/opt/pixel-server/auth.cfg"
				},
				{
					"bind": "/portainer/Files/AppData/Config/pixel-server/pixelserver.cfg",
					"container": "/opt/pixel-server/pixelserver.cfg"
				},
				{
					"bind": "/portainer/Files/AppData/Config/pixel-server/users.cfg",
					"container": "/opt/pixel-server/users.cfg"
				},
				{
					"container": "/etc/crontabs/"
				}
			],
			"privileged": true,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"http://www.penguintutor.com/projects/pixel-server\" target=\"_blank\">http://www.penguintutor.com/projects/pixel-server</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Macleykun/pixel-server\" target=\"_blank\">https://github.com/Macleykun/pixel-server</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pixel-server_setup.md\" target=\"_blank\">pixel-server_setup.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_pixel-server.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_pixel-server.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "rootpassword",
					"label": "POSTGRES_PASSWORD",
					"name": "POSTGRES_PASSWORD"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "postgres:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/postgresql.png",
			"name": "postgresql",
			"platform": "linux",
			"ports": [
				"5432:5432/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "PostgreSQL",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PostgreSQL",
					"container": "/var/lib/postgresql/data"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.postgresql.org/\" target=\"_blank\">https://www.postgresql.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/postgres/\" target=\"_blank\">https://hub.docker.com/_/postgres/</a><br><br><br>"
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Web"
			],
			"description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!\n  ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "privatebin/nginx-fpm-alpine:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/privatebin.png",
			"name": "privatebin",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "PrivateBin",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/PrivateBin",
					"container": "/srv/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PrivateBin",
					"container": "/srv/cfg"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://privatebin.info/\" target=\"_blank\">https://privatebin.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\" target=\"_blank\">https://hub.docker.com/r/privatebin/nginx-fpm-alpine</a><br><br><br>"
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "A docker image with qBittorrent and the Flood UI, also optional WireGuard VPN support. See the official documentation for WireGuard VPN support at https://hotio.dev/containers/qflood/",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "002",
					"label": "UMASK",
					"name": "UMASK"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "false",
					"label": "FLOOD_AUTH",
					"name": "FLOOD_AUTH"
				}
			],
			"image": "hotio/qflood:latest",
			"logo": "https://raw.githubusercontent.com/jesec/flood/master/flood.svg",
			"name": "qflood",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hotio.dev/containers/qflood/\" target=\"_blank\">https://hotio.dev/containers/qflood/</a><br><b>Official Docker Documentation: </b><a href=\"https://hotio.dev/containers/qflood/\" target=\"_blank\">https://hotio.dev/containers/qflood/</a><br><br><br>The default qBittorrent username is admin and the default password is adminadmin.",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "qFlood",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/qFlood",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/app/qBittorrent/downloads"
				}
			]
		},
		{
			"categories": [
				"Monitor",
				"Tools"
			],
			"description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
			"env": [
				{
					"default": "15d",
					"label": "PROMETHEUS_RETENTION",
					"name": "PROMETHEUS_RETENTION"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
			"name": "RaspberryPi-Docker-Monitor",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp"
			],
			"repository": {
				"stackfile": "stack/raspberrypi-monitoring.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"restart_policy": "unless-stopped",
			"title": "Raspberry Pi Docker Monitor",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">rpi_docker_monitor.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/rpi_docker_monitor.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/rpi_docker_monitor.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IoD3vFuep64&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=8 target=\"_blank\">Novaspirit Tech - Raspberry Pi Docker Monitoring</a><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A remote desktop software, the open source TeamViewer alternative, works out of the box, no configuration required. You have full control of your data, with no concerns about security.",
			"env": [
				{
					"default": "rustdesk.example.com:21117",
					"description": "Use your domain with the default 21117 port",
					"label": "RELAY",
					"name": "RELAY"
				},
				{
					"default": "1",
					"description": "if set to \"1\" unencrypted connection will not be accepted",
					"label": "ENCRYPTED_ONLY",
					"name": "ENCRYPTED_ONLY"
				}
			],
			"image": "rustdesk/rustdesk-server-s6:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rustdesk.png",
			"name": "rustdesk",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://rustdesk.com/\" target=\"_blank\">https://rustdesk.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/rustdesk/rustdesk-server\" target=\"_blank\">https://github.com/rustdesk/rustdesk-server</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=PDnqFnnbVHg target=\"_blank\">Novaspirit Tech - Rust Desk Open Source Remote Desktop</a><br><br>Don't forget to open ports 21115 to 21119 in your router.",
			"platform": "linux",
			"ports": [
				"21115:21115/tcp",
				"21116:21116/tcp",
				"21116:21116/udp",
				"21117:21117/tcp",
				"21118:21118/tcp",
				"21119:21119/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "RustDesk",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/rustdesk",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Popular torrent client with a webui for ease of use.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "50",
					"label": "MAX_FILE_UPLOADS",
					"name": "MAX_FILE_UPLOADS"
				},
				{
					"default": "info",
					"label": "RT_LOG_LEVEL",
					"name": "RT_LOG_LEVEL"
				},
				{
					"default": "erasedata,httprpc",
					"label": "RU_REMOVE_CORE_PLUGINS",
					"name": "RU_REMOVE_CORE_PLUGINS"
				}
			],
			"image": "crazymax/rtorrent-rutorrent:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
			"name": "rutorrent",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Novik/ruTorrent\" target=\"_blank\">https://github.com/Novik/ruTorrent</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/crazy-max/docker-rtorrent-rutorrent\" target=\"_blank\">https://github.com/crazy-max/docker-rtorrent-rutorrent</a><br><br><br>For ruTorrent basic auth, XMLRPC through nginx and WebDAV on completed downloads, you can populate .htpasswd files with the following command:\\ndocker run --rm -it httpd:2.4-alpine htpasswd -Bbn <username> <password> >> $(pwd)/passwd/webdav.htpasswd",
			"platform": "linux",
			"ports": [
				"6881:6881/udp",
				"8000:8000/tcp",
				"8080:8080/tcp",
				"9001:9000/tcp",
				"50000:50000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "ruTorrent",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ruTorrent/config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Files/AppData/Config/ruTorrent/passwd",
					"container": "/passwd"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"command": "",
			"description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "USERID",
					"name": "USERID"
				},
				{
					"default": "1000",
					"label": "GROUPID",
					"name": "GROUPID"
				},
				{
					"default": "guest;guest",
					"label": "USER",
					"name": "USER"
				},
				{
					"default": "true",
					"label": "PERMISSIONS",
					"name": "PERMISSIONS"
				},
				{
					"default": "portainer;/share;yes;no;yes;guest",
					"label": "SHARE",
					"name": "SHARE"
				}
			],
			"image": "dperson/samba:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/samba.png",
			"name": "Samba",
			"platform": "linux",
			"ports": [
				"139:139/tcp",
				"445:445/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Samba",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/share"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.samba.org/\" target=\"_blank\">https://www.samba.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dperson/samba\" target=\"_blank\">https://github.com/dperson/samba</a><br><br><br><b>Youtube Videos:</b><br><ul><li><a href=https://www.youtube.com/watch?v=2zZ3_1GRWrM&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=11 target=\"_blank\">Novaspirit Tech - Setting up Raspberry Pi Samba Server For File Sharing on Docker</a></li><li><a href=https://www.youtube.com/watch?v=9ln6UFH4z8o target=\"_blank\">Novaspirit Tech - Building NAS with Container</a></li></ul><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Open-Source Privacy-respecting metasearch engine",
			"env": [
				{
					"default": "http://localhost:9017",
					"label": "BASE_URL",
					"name": "BASE_URL"
				},
				{
					"default": "my-instance",
					"label": "INSTANCE_NAME",
					"name": "INSTANCE_NAME"
				}
			],
			"image": "searxng/searxng:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/searx.png",
			"name": "SearXNG",
			"platform": "linux",
			"ports": [
				"9017:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SearXNG",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/searxng",
					"container": "/etc/searxng"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.searxng.org/\" target=\"_blank\">https://docs.searxng.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.searxng.org/admin/installation-docker.html\" target=\"_blank\">https://docs.searxng.org/admin/installation-docker.html</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/searxng.md\" target=\"_blank\">searxng.md</a></h3><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
			"image": "nicholaswilde/shiori:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/shiori-icon.png",
			"name": "shiori",
			"platform": "linux",
			"ports": [
				"7564:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Shiori",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Shiori",
					"container": "/srv/shiori"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/go-shiori/shiori\" target=\"_blank\">https://github.com/go-shiori/shiori</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nicholaswilde/docker-shiori\" target=\"_blank\">https://github.com/nicholaswilde/docker-shiori</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
			"image": "pawelmalak/snippet-box:arm",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/snibox.png",
			"name": "Snippet-box",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/snippet-box\" target=\"_blank\">https://github.com/pawelmalak/snippet-box</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/snippet-box#with-docker\" target=\"_blank\">https://github.com/pawelmalak/snippet-box#with-docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=v-jUyB3fvAo target=\"_blank\">Novaspirit Tech - My Most used container! Snippet Box</a><br><br>Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
			"platform": "linux",
			"ports": [
				"5010:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Snippet-box",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Snippet-box",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
			"env": [
				{
					"default": "true",
					"label": "OOKLA_EULA_GDPR",
					"name": "OOKLA_EULA_GDPR"
				}
			],
			"image": "henrywhitaker3/speedtest-tracker:dev-arm",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
			"name": "speedtest-tracker",
			"platform": "linux",
			"ports": [
				"8765:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Speedtest Tracker",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/speedtest-tracker",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Tools",
				"Web"
			],
			"description": "Sshwifty is a SSH and Telnet connector made for the Web. It can be deployed on your computer or server to provide SSH and Telnet access interface for any compatible (standard) web browser.",
			"image": "niruix/sshwifty:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/sshwifty-icon.png",
			"name": "Sshwifty",
			"platform": "linux",
			"ports": [
				"8182:8182/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Sshwifty",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://sshwifty.herokuapp.com/\" target=\"_blank\">https://sshwifty.herokuapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nirui/sshwifty#docker-image\" target=\"_blank\">https://github.com/nirui/sshwifty#docker-image</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tool"
			],
			"description": "SurrealDB is an end-to-end cloud native database for web, mobile, serverless, jamstack, backend, and traditional applications.",
			"image": "surrealdb/surrealdb:latest",
			"logo": "",
			"name": "SurrealDB",
			"env": [
				{
					"default": "default_username",
					"label": "SDB_USERNAME",
					"name": "SDB_USERNAME"
				},
				{
					"default": "default_password",
					"label": "SDB_PASSWORD",
					"name": "SDB_PASSWORD"
				}
			],
			"platform": "linux",
			"ports": [
				"8020:8000/tcp"
			],
			"command": "start --user ${SDB_USERNAME} --pass ${SDB_PASSWORD} file:/data/database.db",
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/surrealdb/data",
					"container": "/data"
				}
			],
			"restart_policy": "unless-stopped",
			"title": "SurrealDB",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://surrealdb.com/\" target=\"_blank\">https://surrealdb.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/surrealdb/surrealdb\" target=\"_blank\">https://hub.docker.com/r/surrealdb/surrealdb</a><br><br><br>"
		},
		{
			"categories": [
				"Monitor",
				"Other"
			],
			"description": "A quick way to display system stats on a 128x64 I2C OLED display.",
			"env": [
				{
					"default": "8",
					"label": "start displaying screen",
					"name": "start"
				},
				{
					"default": "23",
					"label": "end displaying screen",
					"name": "end"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.the-diy-life.com/\" target=\"_blank\">https://www.the-diy-life.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/mklements/OLED_Stats_Docker\" target=\"_blank\">https://github.com/mklements/OLED_Stats_Docker</a><br><br><br>Run this command first to enable is2 communication! \\nsudo raspi-config nonint do_i2c 0\\nsudo /DietPi/dietpi/func/dietpi-set_hardware i2c enable || sudo /boot/dietpi/func/dietpi-set_hardware i2c enable\\n",
			"image": "mklements/oled_stats:latest",
			"logo": "https://camo.githubusercontent.com/4cf4aaa1e53612347e4d48f152d6d4eea0ce93a6ecacacaa9d44061d0994b408/68747470733a2f2f7777772e7468652d6469792d6c6966652e636f6d2f77702d636f6e74656e742f75706c6f6164732f323032322f30392f3138373137323831322d64653264653635632d626433302d343065372d613835322d3264343234656463323761622e6a7067",
			"name": "OLED_Stats",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "System Stats OLED display",
			"type": 1,
			"volumes": [
				{
					"bind": "/etc/timezone",
					"container": "/etc/timezone"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			],
			"network": "host",
			"privileged": true
		},
		{
			"categories": [
				"Other",
				"VPN"
			],
			"command": "tailscale up --authkey=$AUTH_KEY",
			"description": "Connect your devices and users together in your own secure Zero config virtual private network. ",
			"env": [
				{
					"default": "",
					"description": "Get AUTH KEY from your tailscale.com user panel",
					"label": "AUTH_KEY",
					"name": "AUTH_KEY"
				}
			],
			"image": "tailscale/tailscale:stable",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/tailscale-icon.png",
			"name": "tailscale",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Tailscale",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/tailscale",
					"container": "/var/lib/tailscale"
				},
				{
					"bind": "/dev/net/tun",
					"container": "/dev/net/tun"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://tailscale.com/\" target=\"_blank\">https://tailscale.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/tailscale/tailscale\" target=\"_blank\">https://hub.docker.com/r/tailscale/tailscale</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A unique, non-linear notebook wiki.",
			"image": "nicolaw/tiddlywiki:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/tiddlywiki.png",
			"name": "tiddlywiki",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "TiddlyWiki",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/TiddlyWiki",
					"container": "/var/lib/tiddlywiki"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://tiddlywiki.com/\" target=\"_blank\">https://tiddlywiki.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://gitlab.com/nicolaw/tiddlywiki\" target=\"_blank\">https://gitlab.com/nicolaw/tiddlywiki</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_tiddlywiki.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_tiddlywiki.sh | bash</h3><br><br>"
		},
		{
			"categories": [
				"Proxy",
				"Security",
				"Tools"
			],
			"description": "Cloud-Native Networking Stack That Just Works.",
			"image": "traefik:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
			"name": "traefik",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/traefik.sh | bash</h3><br><br>A simple and lightweight reverse proxy",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"443:443/tcp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Traefik",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
					"container": "/traefik.yml"
				},
				{
					"bind": "/portainer/Files/AppData/Config/traefik/config.yml",
					"container": "/config.yml"
				},
				{
					"bind": "/portainer/Files/AppData/Config/traefik/acme.json",
					"container": "/acme.json"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN",
				"Tools"
			],
			"description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "MULLVAD",
					"description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
					"label": "OPENVPN_PROVIDER",
					"name": "OPENVPN_PROVIDER"
				},
				{
					"default": "",
					"description": "Optional. Mostly used to narrow down what location to use by the provider",
					"label": "OPENVPN_CONFIG",
					"name": "OPENVPN_CONFIG"
				},
				{
					"default": "",
					"label": "OPENVPN_USERNAME",
					"name": "OPENVPN_USERNAME"
				},
				{
					"default": "",
					"label": "OPENVPN_PASSWORD",
					"name": "OPENVPN_PASSWORD"
				},
				{
					"default": "192.168.0.0/24",
					"label": "LOCAL_NETWORK",
					"name": "LOCAL_NETWORK"
				},
				{
					"default": "true",
					"label": "watch-dir-enabled",
					"name": "TRANSMISSION_WATCH_DIR_ENABLED"
				}
			],
			"image": "haugene/transmission-openvpn:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/transmission-icon.png",
			"name": "transmission-openvpn-latest",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://transmissionbt.com/\" target=\"_blank\">https://transmissionbt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://haugene.github.io/docker-transmission-openvpn/run-container/\" target=\"_blank\">https://haugene.github.io/docker-transmission-openvpn/run-container/</a><br><br><br>List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Transmission OpenVPN Latest",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/transmission-openvpn",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/data"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN",
				"Tools"
			],
			"description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "MULLVAD",
					"description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
					"label": "OPENVPN_PROVIDER",
					"name": "OPENVPN_PROVIDER"
				},
				{
					"default": "",
					"description": "Optional. Mostly used to narrow down what location to use by the provider",
					"label": "OPENVPN_CONFIG",
					"name": "OPENVPN_CONFIG"
				},
				{
					"default": "",
					"label": "OPENVPN_USERNAME",
					"name": "OPENVPN_USERNAME"
				},
				{
					"default": "",
					"label": "OPENVPN_PASSWORD",
					"name": "OPENVPN_PASSWORD"
				},
				{
					"default": "192.168.0.0/24",
					"label": "LOCAL_NETWORK",
					"name": "LOCAL_NETWORK"
				},
				{
					"default": "true",
					"label": "watch-dir-enabled",
					"name": "TRANSMISSION_WATCH_DIR_ENABLED"
				}
			],
			"image": "haugene/transmission-openvpn:3.7.1",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/transmission-icon.png",
			"name": "transmission-openvpn",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://transmissionbt.com/\" target=\"_blank\">https://transmissionbt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://haugene.github.io/docker-transmission-openvpn/run-container/\" target=\"_blank\">https://haugene.github.io/docker-transmission-openvpn/run-container/</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=tGLVEq913_4&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=5 target=\"_blank\">Novaspirit Tech - Torrent with Docker and OPENVPN with Transmission and PIA</a><br><br>List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Transmission OpenVPN v3",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/transmission-openvpn",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/data"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			]
		},
		{
			"categories": [
				"CCTV"
			],
			"description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti’s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature‑packed user interface with advanced features such as motion detection, auto‑discovery, user‑level security, storage management, reporting, and mobile device support.",
			"env": [
				{
					"default": "99",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "002",
					"label": "UMASK",
					"name": "UMASK"
				},
				{
					"default": "UniFi Video",
					"label": "CONTEXT_PATH",
					"name": "CONTEXT_PATH"
				}
			],
			"image": "pducharme/unifi-video-controller:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/unifivideo-icon.png",
			"name": "UniFi Video",
			"platform": "linux",
			"ports": [
				"1935:1935/tcp",
				"7444:7444/tcp",
				"7447:7447/tcp",
				"6666:6666/tcp",
				"7442:7442/tcp",
				"7080:7080/tcp",
				"7443:7443/tcp",
				"7445:7445/tcp",
				"7446:7446/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "UniFi Video",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
					"container": "/recordings"
				},
				{
					"bind": "/portainer/Files/AppData/Config/UniFiVideo/",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pducharme/UniFi-Video-Controller\" target=\"_blank\">https://github.com/pducharme/UniFi-Video-Controller</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pducharme/UniFi-Video-Controller\" target=\"_blank\">https://github.com/pducharme/UniFi-Video-Controller</a><br><br><br>"
		},
		{
			"categories": [
				"Tools"
			],
			"description": "Unmanic is a simple tool for optimising your file library. You can use it to convert your files into a single, uniform format, manage file movements based on timestamps, or execute custom commands against a file based on its file size.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "josh5/unmanic:latest",
			"logo": "https://docs.unmanic.app/img/icon.png",
			"name": "unmanic",
			"platform": "linux",
			"ports": [
				"8888:8888/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Unmanic",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/unmanic/config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/unmanic/library",
					"container": "/library"
				},
				{
					"bind": "/portainer/Files/AppData/Config/unmanic/tmp",
					"container": "/tmp/unmanic"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.unmanic.app/\" target=\"_blank\">https://docs.unmanic.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.unmanic.app/docs/installation/docker\" target=\"_blank\">https://docs.unmanic.app/docs/installation/docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "It is a self-hosted monitoring tool like 'Uptime Robot'.",
			"image": "louislam/uptime-kuma:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/uptime-kuma.png",
			"name": "uptime-kuma",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/louislam/uptime-kuma\" target=\"_blank\">https://github.com/louislam/uptime-kuma</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker\" target=\"_blank\">https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker</a><br><br><br>A fancy self-hosted monitoring tool.",
			"platform": "linux",
			"ports": [
				"3001:3001/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Uptime Kuma",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/uptime-kuma",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Backup"
			],
			"description": "UrBackup is an easy to setup Open Source client/server backup system, that through a combination of image and file backups accomplishes both data safety and a fast restoration time.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "uroni/urbackup-server:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/urbackup.png",
			"name": "UrBackup",
			"platform": "linux",
			"ports": [
				"55415:55415/tcp",
				"55414:55414/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "UrBackup",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/urbackup",
					"container": "/var/urbackup"
				},
				{
					"bind": "/portainer/backups",
					"container": "/backup"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.urbackup.org/\" target=\"_blank\">https://www.urbackup.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.github.com/uroni/urbackup-server-docker\" target=\"_blank\">https://www.github.com/uroni/urbackup-server-docker</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
			"image": "vaultwarden/server:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bitwarden.png",
			"name": "vaultwarden",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/dani-garcia/vaultwarden\" target=\"_blank\">https://github.com/dani-garcia/vaultwarden</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dani-garcia/vaultwarden/wiki\" target=\"_blank\">https://github.com/dani-garcia/vaultwarden/wiki</a><br><br><br>Alternative Implementation of the Bitwarden Server API in Rust, including web vault.",
			"platform": "linux",
			"ports": [
				"8010:80/tcp",
				"3012:3012/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Vaultwarden",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Bitwarden",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "This is a replacement for Microsoft's KMS server.",
			"image": "mikolatero/vlmcsd:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vlmcsd.png",
			"name": "vlmcsd-kms",
			"platform": "linux",
			"ports": [
				"1688:1688/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Vlmcsd - KMS",
			"type": 1,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mikolatero/vlmcsd\" target=\"_blank\">https://hub.docker.com/r/mikolatero/vlmcsd</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/mikolatero/docker-vlmcsd\" target=\"_blank\">https://github.com/mikolatero/docker-vlmcsd</a><br><br><br>"
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Maintenance"
			],
			"description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
			"image": "containrrr/watchtower:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/watchtower.png",
			"name": "watchtower",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://containrrr.dev/watchtower/\" target=\"_blank\">https://containrrr.dev/watchtower/</a><br><b>Official Docker Documentation: </b><a href=\"https://containrrr.dev/watchtower/usage-overview/\" target=\"_blank\">https://containrrr.dev/watchtower/usage-overview/</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=q3wKqk8qVS8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=7 target=\"_blank\">Novaspirit Tech - Upgrading Portainer and Updating Containers</a><br><br>It is recommended to manually update your containers but we're including this for those of you that don't care",
			"platform": "linux",
			"command": "--cleanup",
			"restart_policy": "unless-stopped",
			"title": "Watchtower",
			"type": 1,
			"volumes": [
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
			"image": "benbusby/whoogle-search:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/whoogle.png",
			"name": "whoogle",
			"platform": "linux",
			"ports": [
				"5001:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Whoogle",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Whoogle",
					"container": "/config"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/benbusby/whoogle-search\" target=\"_blank\">https://github.com/benbusby/whoogle-search</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/benbusby/whoogle-search#g-manual-docker\" target=\"_blank\">https://github.com/benbusby/whoogle-search#g-manual-docker</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_whoogle.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_whoogle.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=j3ZGxo3ibUs&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=12 target=\"_blank\">Novaspirit Tech - How to Install Whoogle to replace using Google and repo notes</a><br><br>"
		},
		{
			"categories": [
				"Other",
				"VPN"
			],
			"description": "Fast VPN Server with easy to use User Interface",
			"env": [
				{
					"default": "example.domain.com",
					"description": "Set here your DDNS domain",
					"label": "WG_HOST",
					"name": "WG_HOST"
				},
				{
					"default": "ENTER AN ADMIN PASSWORD",
					"description": "Leave blank to access WebUI without loggin",
					"label": "PASSWORD",
					"name": "PASSWORD"
				},
				{
					"default": "51820",
					"label": "WG_PORT",
					"name": "WG_PORT"
				},
				{
					"default": "1.1.1.1",
					"label": "WG_DEFAULT_DNS",
					"name": "WG_DEFAULT_DNS"
				},
				{
					"default": "10.8.0.x",
					"label": "WG_DEFAULT_ADDRESS",
					"name": "WG_DEFAULT_ADDRESS"
				},
				{
					"default": "0.0.0.0/0, ::/0",
					"label": "WG_ALLOWED_IPS",
					"name": "WG_ALLOWED_IPS"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wireguard.png",
			"name": "wg-easy",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/wireguard-easy.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"title": "Wireguard Server",
			"type": 3,
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/WeeJeWel/wg-easy/\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/WeeJeWel/wg-easy/#1-install-docker\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/#1-install-docker</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wireguard-install.md\" target=\"_blank\">wireguard-install.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yB_jAumIxOg target=\"_blank\">Novaspirit Tech - Beginners Guide to WireGuard Docker and Installing Pi-OS 64bit</a><br><br>"
		},
		{
			"categories": [
				"WordPress",
				"Web"
			],
			"description": "Wordpress setup with a MySQL database",
			"env": [
				{
					"default": "5080",
					"label": "External Port for webserver forward to port 80",
					"name": "WEB_SERVER_PORT"
				},
				{
					"default": "wordpress",
					"label": "Database user name",
					"name": "MYSQL_DATABASE_USER_NAME"
				},
				{
					"label": "Database password for user",
					"name": "MYSQL_DATABASE_PASSWORD"
				},
				{
					"label": "Database root password",
					"name": "MYSQL_DATABASE_ROOT_PASSWORD"
				}
			],
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wordpress.png",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://wordpress.com/\" target=\"_blank\">https://wordpress.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/wordpress#-via-docker-stack-deploy-or-docker-compose</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wordpress_installation.md\" target=\"_blank\">wordpress_installation.md</a></h3><br><br><br>Deploys a Wordpress instance connected to a MySQL database.",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/wordpress-stack.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"title": "Wordpress",
			"type": 3
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
			"image": "selfhostedpro/yacht:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
			"name": "yacht",
			"platform": "linux",
			"ports": [
				"8001:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Yacht",
			"type": 1,
			"volumes": [
				{
					"bind": "yacht",
					"container": "/config"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://yacht.sh/\" target=\"_blank\">https://yacht.sh/</a><br><b>Official Docker Documentation: </b><a href=\"https://yacht.sh/docs/Installation/Install#via-docker-compose\" target=\"_blank\">https://yacht.sh/docs/Installation/Install#via-docker-compose</a><br><br><br>"
		},
		{
			"categories": [
				"Music"
			],
			"description": "Self hosted Spotify tracking dashboard.",
			"env": [
				{
					"default": "3081",
					"label": "API Port",
					"name": "__api_port__"
				},
				{
					"default": "3080",
					"label": "Client Port",
					"name": "__client_port__"
				},
				{
					"default": "http://192.168.X.Y:3080",
					"label": "Client Endpoint",
					"name": "__client_endpoint__",
					"description": "If you have changed the default client port don't forget to change it here too."
				},
				{
					"default": "http://192.168.X.Y:3081",
					"label": "API Endpoint",
					"name": "__api_endpoint__",
					"description": "If you have changed the default API port don't forget to change it here too."
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"description": "Create a Spotify App and copy the Client ID: https://developer.spotify.com/dashboard/applications",
					"label": "Spotify Client ID",
					"name": "__your_spotify_client_id__"
				},
				{
					"description": "Copy the Client Secret: https://developer.spotify.com/dashboard/applications",
					"label": "Spotify Client Secret",
					"name": "__your_spotify_secret__"
				}
			],
			"name": "Your Spotify",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/your-spotify.png",
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Yooooomi/your_spotify\" target=\"_blank\">https://github.com/Yooooomi/your_spotify</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Yooooomi/your_spotify#readme\" target=\"_blank\">https://github.com/Yooooomi/your_spotify#readme</a><br><br><br>Create a Spotify App here: https://developer.spotify.com/dashboard/applications. Don't forget adding Redirect URL: http://192.168.X.Y:3081/oauth/spotify/callback under edit settings of the dashboard.",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/your-spotify.yml",
				"url": "https://github.com/pi-hosted/pi-hosted"
			},
			"title": "your-spotify",
			"type": 3
		},
		{
			"categories": [
				"Other",
				"Downloaders"
			],
			"description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
			"image": "tzahi12345/youtubedl-material:latest",
			"logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ytdlm.png",
			"name": "youtubedl-material",
			"platform": "linux",
			"ports": [
				"17442:17442/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "YouTubeDL-Material",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/YTDLM",
					"container": "/app/appdata"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Video",
					"container": "/app/video"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Subscriptions",
					"container": "/app/subscriptions"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Users",
					"container": "/app/users"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Audio",
					"container": "/app/audio"
				}
			],
			"note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Tzahi12345/YoutubeDL-Material\" target=\"_blank\">https://github.com/Tzahi12345/YoutubeDL-Material</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Tzahi12345/YoutubeDL-Material#docker\" target=\"_blank\">https://github.com/Tzahi12345/YoutubeDL-Material#docker</a><br><br><br>"
		}
	]
}
