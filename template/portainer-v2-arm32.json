{
	"version": "2",
	"templates": [
		{
			"categories": [
				"Music"
			],
			"description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
                {
					"default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
				{
					"default": "airsonic",
					"label": "CONTEXT_PATH",
					"name": "CONTEXT_PATH"
				},
				{
					"default": "-Xms256m -Xmx512m",
					"label": "JAVA_OPTS",
					"name": "JAVA_OPTS"
				}
			],
			"image": "linuxserver/airsonic:arm32v7-latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/airsonic-logo.png",
			"name": "airsonic",
			"platform": "linux",
			"ports": [
				"4040:4040/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Airsonic",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Music",
					"container": "/music"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Airsonic/Playlists",
					"container": "/playlists"
				},
				{
					"bind": "/portainer/Podcasts",
					"container": "/podcasts"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Airsonic/Media",
					"container": "/media"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Airsonic/Config",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
			"image": "archivebox/archivebox:master",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/archivebox.png",
			"name": "archivebox",
			"note": "By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available \u003ca href='https://github.com/ArchiveBox/ArchiveBox/wiki'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"8002:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Archivebox",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/archivebox",
					"container": "/data"
				}
			],
			"env": [
				{
					"default": "*",
					"label": "ALLOWED_HOSTS",
					"name": "ALLOWED_HOSTS"
				},
				{
					"default": "750m",
					"label": "MEDIA_MAX_SIZE",
					"name": "MEDIA_MAX_SIZE"
				},
				{
					"default": true,
					"label": "PUBLIC_INDEX",
					"name": "PUBLIC_INDEX"
				},
				{
					"default": true,
					"label": "PUBLIC_SNAPSHOTS",
					"name": "PUBLIC_SNAPSHOTS"
				},
				{
					"default": false,
					"label": "PUBLIC_ADD_VIEW",
					"name": "PUBLIC_ADD_VIEW"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Authentication"
			],
			"description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
			"env": [
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "authelia/authelia:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/authelia.png",
			"name": "authelia",
			"note": "Requires a configuration.yml file in order to work. Documentation is Available \u003ca href='https://docs.authelia.com/deployment/deployment-ha'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Authelia",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Authelia",
					"container": "/etc/authelia/"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music"
			],
			"description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/bazarr:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/bazarr.png",
			"name": "bazarr",
			"platform": "linux",
			"ports": [
				"6767:6767/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Bazarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Bazarr",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Music"
			],
			"description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/beets:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/beets-icon.png",
			"name": "beets",
			"platform": "linux",
			"ports": [
				"8337:8337/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Beets",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Beets",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Music",
					"container": "/music"
				}
			]
		},
		{
			"categories": [
				"Books",
				"Other"
			],
			"description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "booksonic",
					"label": "CONTEXT_PATH",
					"name": "CONTEXT_PATH"
				}
			],
			"image": "linuxserver/booksonic:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/booksonic.png",
			"name": "booksonic",
			"platform": "linux",
			"ports": [
				"4040:4040/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Booksonic",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/Podcasts",
					"container": "/podcast"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Booksonic",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Wiki"
			],
			"description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				},
				{
					"label": "PORT",
					"name": "PORT"
				}
			],
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/bookstack2.png",
			"note": "Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/bookstack.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			},
			"title": "Bookstack",
			"type": 3
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Photo"
			],
			"description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "CHEVERETO_DB_HOST",
					"name": "CHEVERETO_DB_HOST",
					"default": ""
				},
				{
					"label": "CHEVERETO_DB_USERNAME",
					"name": "CHEVERETO_DB_USERNAME",
					"default": ""
				},
				{
					"label": "CHEVERETO_DB_PASSWORD",
					"name": "CHEVERETO_DB_PASSWORD",
					"default": ""
				},
				{
					"label": "CHEVERETO_DB_NAME",
					"name": "CHEVERETO_DB_NAME",
					"default": ""
				},
				{
					"label": "CHEVERETO_DB_PREFIX",
					"name": "CHEVERETO_DB_PREFIX",
					"default": ""
				}
			],
			"image": "nmtan/chevereto:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/Chevereto.png",
			"name": "Chevereto",
			"platform": "linux",
			"ports": [
				"7382:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Chevereto",
			"type": 1,
			"volumes": [
				{
					"container": "/var/www/html/images"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/calibre-web:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/calibre-web-icon.png",
			"name": "calibre-web",
			"platform": "linux",
			"ports": [
				"8083:8083/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Calibre Web",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Calibre-web",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/cardigann:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/cardigann.png",
			"name": "cardigann",
			"platform": "linux",
			"ports": [
				"5060:5060/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Cardigann",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Cardigann",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Code-server is VS Code running on a remote server, accessible through the browser.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "GUID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "PASSWORD",
					"name": "PASSWORD"
				},
				{
					"label": "SUDO_PASSWORD",
					"name": "SUDO_PASSWORD"
				},
				{
					"default": "example.my.domain",
					"label": "PROXY_DOMAIN",
					"name": "PROXY_DOMAIN"
				}
			],
			"image": "linuxserver/code-server:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/code-server.png",
			"name": "code-server",
			"platform": "linux",
			"ports": [
				"8443:8443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Code Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Code-Server",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Productivity"
			],
			"description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/codiad:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/codiad-icon.png",
			"name": "codiad",
			"platform": "linux",
			"ports": [
				"7294:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Codiad",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Codiad",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/cops:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/cops-icon.png",
			"name": "cops",
			"platform": "linux",
			"ports": [
				"8945:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "COPS",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Books",
					"container": "/books"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Cops",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/couchpotato:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/couchpotato-icon.png",
			"name": "couchpotato",
			"platform": "linux",
			"ports": [
				"5050:5050/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "CouchPotato",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Couchpotato",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Music"
			],
			"description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/daapd:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
			"name": "daapd",
			"platform": "linux",
			"ports": [
				"3689:3689/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Daapd",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Daapd",
					"container": "/config"
				},
				{
					"bind": "/portainer/Music",
					"container": "/music"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Another application bookmark dashboard, with fun features.",
			"image": "rmountjoy/dashmachine:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/dashmachine_logo.png",
			"name": "dashmachine",
			"platform": "linux",
			"ports": [
				"5000:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "DashMachine",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Dashmachine",
					"container": "/dashmachine/dashmachine/user_data"
				}
			]
		},
		{
			"categories": [
				"FTP",
				"Other",
				"Tools"
			],
			"description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/davos:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/davos.png",
			"name": "davos",
			"platform": "linux",
			"ports": [
				"7136:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Davos",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Davos",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Music"
			],
			"description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
			"image": "registry.gitlab.com/bockiii/deemix-docker",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/deemix.png",
			"name": "deemix",
			"note": "Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to \u003ca href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'\u003ethis page\u003c/a\u003e for userToken details.",
			"platform": "linux",
			"ports": [
				"9666:9666/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "DeeMix",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/DeeMix",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "022",
					"label": "UMASK",
					"name": "UMASK"
				}
			],
			"image": "linuxserver/deluge:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/deluge-icon.png",
			"name": "deluge",
			"platform": "linux",
			"ports": [
				"6881:6881/tcp",
				"8112:8112/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Deluge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Deluge",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN",
				"Tools"
			],
			"description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PUID"
				},
				{
					"default": "MULLVAD",
					"description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
					"label": "OPENVPN_PROVIDER",
					"name": "OPENVPN_PROVIDER"
				},
				{
					"label": "OPENVPN_USERNAME",
					"name": "OPENVPN_USERNAME"
				},
				{
					"label": "OPENVPN_PASSWORD",
					"name": "OPENVPN_PASSWORD"
				},
				{
					"label": "OPENVPN_CONFIG",
					"name": "OPENVPN_CONFIG",
					"default": "CA Toronto"
				},
				{
					"label": "LOCAL_NETWORK",
					"name": "LOCAL_NETWORK",
					"default": "192.168.0.0/16"
				}
			],
			"image": "sgtsquiggs/deluge-openvpn:arm32v7-latest",
			"name": "deluge-openvpn",
			"platform": "linux",
			"ports": [
				"8112:8112/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Deluge openvpn",
			"type": 1,
			"volumes": [
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation",
				"Management"
			],
			"description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/domoticz:latest",
			"logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
			"name": "domoticz",
			"platform": "linux",
			"ports": [
				"1443:1443/tcp",
				"6144:6144/tcp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Domoticz",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Domoticz",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Dozzle is a real-time log viewer for docker containers.",
			"image": "amir20/dozzle:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/dozzle.png",
			"name": "dozzle",
			"note": "View logs for docker containers.",
			"platform": "linux",
			"ports": [
				"8888:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Dozzle",
			"type": 1,
			"volumes": [
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Security"
			],
			"description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
			"image": "raesene/dradis:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/dradis-logo.png",
			"name": "dradis",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Dradis",
			"type": 1
		},
		{
			"categories": [
                "Other",
				"CMS",
				"Web",
				"Tools"
			],
			"description": "Drupal CMS.  Make sure you run the install script under tools before installing.",
			"env": [
				{
					"default": "",
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				},
				{
					"default": "drupal",
					"label": "DATABASE_NAME",
					"name": "DATABASE_NAME"
				},
				{
					"default": "drupal",
					"label": "DATABASE_USER",
					"name": "DATABASE_USER"
				},
				{
					"default": "",
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				}
			],
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/drupal.png",
			"name": "drupal",
			"platform": "linux",
			"ports": [
				"4080:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Drupal",
			"type": 3,
			"repository": {
				"stackfile": "stack/drupal.yml",
				"url": "https://github.com/novaspirit/pi-hosted/"
			}
		},
		{
			"categories": [
				"DNS",
				"Tools"
			],
			"description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
			"env": [
				{
					"default": "",
					"label": "SUBDOMAINS (Comma Separated List)",
					"name": "SUBDOMAINS"
				},
				{
					"default": "",
					"label": "TOKEN",
					"name": "TOKEN"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/duckdns:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/duckdns.png",
			"name": "duckdns",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Duck DNS",
			"type": 1
		},
		{
			"categories": [
				"Backup",
				"Cloud",
				"Other",
				"Productivity",
				"Tools"
			],
			"description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/duplicati:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/duplicati-icon.png",
			"name": "duplicati",
			"platform": "linux",
			"ports": [
				"8200:8200/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Duplicati",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Duplicati",
					"container": "/config"
				},
				{
					"container": "/tmp"
				},
				{
					"container": "/backups"
				},
				{
					"container": "/source"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.\r\nYou will need to create /portainer/Files/AppData/Config/Mosquitto/config/mosquitto.conf and if needed your password file.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
			"image": "eclipse-mosquitto:latest",
			"logo": "https://raw.githubusercontent.com/docker-library/docs/757578e3a44e5460a8a11d32a81776f8b74231a9/eclipse-mosquitto/logo.png",
			"name": "mosquitto",
			"platform": "linux",
			"ports": [
				"1883:1883/tcp"
			],
			"restart_policy": "unless-stopped",
			"hostname": "rpi-mosquitto",
			"title": "Eclipse Mosquitto",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/config",
					"container": "/mosquitto/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/data",
					"container": "/mosquitto/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Mosquitto/log",
					"container": "/mosquitto/log"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/emby:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/emby.png",
			"name": "emby",
			"platform": "linux",
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Emby",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Emby",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/data/tvshows"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/data/movies"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
			"image": "linuxserver/embystat:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/embystat.png",
			"name": "embystat",
			"note": "Access the ui at your-ip:6555. Follow the setup wizard on initial install. Then configure the required services.",
			"platform": "linux",
			"ports": [
				"6555:6555/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "EmbyStat",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/EmbyStat",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "[arm] Web File Browser which can be used as a middleware or standalone app.",
			"image": "filebrowser/filebrowser:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/filebrowser.png",
			"name": "filebrowser",
			"note": "The default user and password is admin/admin.",
			"platform": "linux",
			"ports": [
				"8082:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/srv"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Games"
			],
			"description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
			"image": "felddy/foundryvtt:release",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/foundrylogo.png",
			"name": "FoundryVTT",
			"platform": "linux",
			"type": 1,
			"ports": [
				"30000:30000/tcp"
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/foundryvtt",
					"container": "/data"
				}
			],
			"env": [
				{
					"default": "John",
					"label": "Foundry Account Name",
					"name": "FOUNDRY_USERNAME"
				},
				{
					"default": "password",
					"label": "Foundry Password",
					"name": "FOUNDRY_PASSWORD"
				},
				{
					"default": "changeme",
					"label": "Instance Admin Password",
					"name": "FOUNDRY_ADMIN_KEY"
				},
				{
					"label": "CONTAINER_PRESERVE_CONFIG",
					"name": "CONTAINER_PRESERVE_CONFIG",
					"default": "true"
				}
			],
			"restart_polocy": "unless-stopped",
			"title": "FoundryVTT Server"
		},
		{
			"categories": [
				"Other"
			],
			"description": "A free, self-hostable rss aggregator…",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/freshrss:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/freshrss-icon.png",
			"name": "freshrss",
			"platform": "linux",
			"ports": [
				"8132:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FreshRSS",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/freshrss",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Web",
				"Books",
				"Tools"
			],
			"description": "[DEPRECATED] A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/gazee:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/gazee-logo.png",
			"name": "gazee",
			"platform": "linux",
			"ports": [
				"4242:4242/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Gazee",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Gazee",
					"container": "/config"
				},
				{
					"bind": "/portainer/Comics",
					"container": "/comics"
				},
				{
					"bind": "/portainer/Files/AppData/Gazee",
					"container": "/mylar"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A simple server for sending and receiving messages",
			"image": "gotify/server-arm7:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/gotify.png",
			"name": "gotify",
			"note": "ARM7 Image. Documentation is Available \u003ca href='https://gotify.net/docs/index'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9008:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Gotify",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/gotify",
					"container": "/app/data"
				}
			],
			"env": [
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "admin",
					"label": "GOTIFY_DEFAULTUSER_NAME",
					"name": "GOTIFY_DEFAULTUSER_NAME"
				},
				{
					"default": "admin123",
					"label": "GOTIFY_DEFAULTUSER_PASS",
					"name": "GOTIFY_DEFAULTUSER_PASS"
				}
			]

    	},
		{
			"categories": [
				"Other",
				"Tools",
				"Finance"
			],
			"description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utulity.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "Timezone",
					"name": "TZ"
				}
			],
			"image": "linuxserver/grocy:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/grocy_logo.png",
			"name": "grocy",
			"platform": "linux",
			"ports": [
				"9283:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Grocy",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Grocy",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "[arm] A clientless remote desktop gateway.",
			"image": "oznu/guacamole:armhf",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/guacamole.png",
			"name": "guacamole",
			"note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Guacamole",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Guacamole",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Music"
			],
			"description": null,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/headphones:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/headphones-icon.png",
			"name": "headphones",
			"platform": "linux",
			"ports": [
				"8181:8181/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Headphones",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Headphones",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/Downloads"
				},
				{
					"bind": "/portainer/Music",
					"container": "/music"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/heimdall:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/heimdall-icon.png",
			"name": "heimdall",
			"platform": "linux",
			"ports": [
				"7202:80/tcp",
				"7203:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Heimdall",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Heimdall",
					"container": "/config"
				}
			]
		},
		{
			"description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
			"image": "homeassistant/home-assistant:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/homeassistant.png",
			"name": "home assistant",
			"platform": "linux",
			"ports": [
				"8999:8123/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Home Assistant",
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"HomeAutomation"
			],
			"description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
			"env": [
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1",
					"label": "HOMEBRIDGE_CONFIG_UI",
					"name": "HOMEBRIDGE_CONFIG_UI"
				},
				{
					"default": "8581",
					"label": "HOMEBRIDGE_CONFIG_UI_PORT",
					"name": "HOMEBRIDGE_CONFIG_UI_PORT"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "oznu/homebridge:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/homebridge.png",
			"name": "homebridge",
			"network": "host",
			"note": "Bringing HomeKit support where there is none",
			"platform": "linux",
			"privileged": true,
			"restart_policy": "always",
			"title": "Homebridge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/homebridge",
					"container": "/homebridge"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
			"image": "b4bz/homer:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/homer.png",
			"name": "homer",
			"note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
			"platform": "linux",
			"ports": [
				"8902:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homer",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Homer/assets",
					"container": "/www/assets"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Homer",
					"container": "/www/config.yml"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Other"
			],
			"description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/htpcmanager:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/htpcmanager-icon.png",
			"name": "htpcmanager",
			"platform": "linux",
			"ports": [
				"8085:8085/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "HTPC Manager",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/HTPCmanager",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Create agents that monitor and act on your behalf.",
			"image": "mjysci/huginn:arm32v7",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/huginn.png",
			"name": "huginn",
			"platform": "linux",
			"ports": [
				"3005:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Huginn",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/huginn",
					"container": "/var/lib/mysql"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "InfluxDB is an open source time series database for recording metrics, events, and analytics. You will need to add /portainer/Files/AppData/Config/Influxdb/config/influxdb.conf",
			"image": "influxdb:1.8.10",
			"logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
			"name": "influxdb1810",
			"platform": "linux",
			"ports": [
				"8086:8086/tcp"
			],
			"restart_policy": "unless-stopped",
			"hostname": "rpi-influxdb1810",
			"title": "Influxdb 1.8.10",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Influxdb/data",
					"container": "/var/lib/influxdb"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Influxdb/config",
					"container": "/var/lib/influxdb"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/jackett:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/jacket-icon.png",
			"name": "jackett",
			"platform": "linux",
			"ports": [
				"9117:9117/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Jackett",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Jackett",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "JDownloader docker image",
			"env": [
				{
					"default": "",
					"label": "MYJD_DEVICE_NAME",
					"name": "MYJD_DEVICE_NAME"
				},
				{
					"default": "",
					"label": "MYJD_USER",
					"name": "MYJD_USER"
				},
				{
					"default": "",
					"label": "MYJD_PASSWORD",
					"name": "MYJD_PASSWORD"
				}
			],
			"image": "jaymoulin/jdownloader:1.4.3-armhf",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/jdownloader.png",
			"name": "JDownloader",
			"platform": "linux",
			"ports": [
				"3129:3129/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "JDownloader",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/JDownloader",
					"container": "/opt/JDownloader/cfg"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/opt/JDownloader/Downloads"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/jellyfin:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/jellyfin.png",
			"name": "jellyfin",
			"platform": "linux",
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Jellyfin",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Jelllyfin",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/data/tvshows"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/data/movies"
				}
			]
		},
		{
			"categories": [
				"Video"
			],
			"description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "lsioarmhf/kodi-headless:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/kodi-icon.png",
			"name": "kodi-headless",
			"platform": "linux",
			"ports": [
				"8081:8080/tcp",
				"9090:9090/tcp",
				"9777:9777/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Kodi Headless",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Kodi",
					"container": "/config/.kodi"
				}
			]
		},
		{
			"categories": [
				"Books"
			],
			"description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/lazylibrarian:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/lazylibrarian-icon.png",
			"name": "lazylibrarian",
			"platform": "linux",
			"ports": [
				"5299:5299/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "LazyLibrarian",
			"type": 1,
			"volumes": [
				{
					"container": "/config"
				},
				{
					"container": "/downloads"
				},
				{
					"container": "/books"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web"
			],
			"description": "[DEPRECATED] This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd \u0026lt;username\u0026gt;",
			"env": [
				{
					"label": "EMAIL",
					"name": "EMAIL",
					"default": "-Xms256m -Xmx512m"
				},
				{
					"label": "URL",
					"name": "URL",
					"default": "-Xms256m -Xmx512m"
				},
				{
					"label": "SUBDOMAINS",
					"name": "SUBDOMAINS",
					"default": "www,"
				},
				{
					"label": "ONLY_SUBDOMAINS",
					"name": "ONLY_SUBDOMAINS",
					"default": "false"
				},
				{
					"label": "DHLEVEL",
					"name": "DHLEVEL",
					"default": "2048"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "VALIDATION",
					"name": "VALIDATION",
					"default": "http"
				},
				{
					"label": "DNSPLUGIN",
					"name": "DNSPLUGIN",
					"default": "http"
				}
			],
			"image": "linuxserver/letsencrypt:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/letsencrypt.png",
			"name": "letsencrypt",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Let's Encrypt",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/LetsEncrypt",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Free and Open Source Speedtest for HTML5 and more.",
			"env": [
                                {
                                        "default": "1000",
                                        "label": "PUID",
                                        "name": "PUID"
                                },
                                {
                                        "default": "1000",
                                        "label": "PGID",
                                        "name": "PGID"
                                }
                        ],
			"image": "linuxserver/librespeed:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/speedtest.png",
			"name": "librespeed",
			"platform": "linux",
			"ports": [
				"83:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "LibreSpeed",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/LibreSpeed",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Music"
			],
			"description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/lidarr:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/lidarr.png",
			"name": "lidarr",
			"platform": "linux",
			"ports": [
				"8686:8686/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "lidarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Lidarr",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Music",
					"container": "/music"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Web",
				"Management",
				"Photos"
			],
			"description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
                                        "label": "DB_HOST",
                                        "name": "DB_HOST",
                                        "default": "mariadb"
                                },
                                {
                                        "label": "DB_USERNAME",
                                        "name": "DB_USERNAME",
                                        "default": "lychee"
                                },
                                {
                                        "label": "DB_PASSWORD",
                                        "name": "DB_PASSWORD",
                                        "default": "dbpassword_that_was_set_in_lychee-mariadb"
                                },
                                {
                                        "label": "DB_DATABASE",
                                        "name": "DB_DATABASE",
                                        "default": "lychee"
                                },
                                {
                                        "label": "DB_PORT",
                                        "name": "DB_PORT",
                                        "default": "3306"
                                }
			],
			"image": "linuxserver/lychee:arm32v7-latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/lychee-icon.png",
			"name": "lychee",
			"platform": "linux",
			"ports": [
				"84:84/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Lychee",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Lychee",
					"container": "/config"
				},
				{
					"bind": "/portainer/Pictures",
					"container": "/pictures"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "An Enhanced drop in replacement for Mysql",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
                                        "label": "MYSQL_ROOT_PASSWORD",
                                        "name": "MYSQL_ROOT_PASSWORD",
                                        "default": "rootpassword"
                                },
				{
                                        "label": "MYSQL_DATABASE",
                                        "name": "MYSQL_DATABASE",
                                        "default": "lychee"
                                },
				{
					"label": "MYSQL_USER",
					"name": "MYSQL_USER",
					"default": "lychee"
				},
				{
                                        "label": "MYSQL_PASSWORD",
                                        "name": "MYSQL_PASSWORD",
                                        "default": "dbpassword"
                                }
			],
			"image": "linuxserver/mariadb:arm32v7-latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/mariadb-icon.png",
			"name": "mariadb",
			"platform": "linux",
			"ports": [
				"3306:3306/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "MariaDB",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Mariadb",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "[DEPRECATED] Arm32 support dropped at v0.4.3. A self-hosted recipe manager and meal planner",
			"image": "hkotel/mealie:v0.4.3",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/mealie.png",
			"name": "mealie",
			"note": "Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available \u003ca href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9925:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Mealie",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/mealie",
					"container": "/app/data"
				}
			],
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "2",
					"label": "WEB_CONCURRENCY",
					"name": "WEB_CONCURRENCY"
				},
				{
					"default": "8",
					"label": "MAX_WORKERS",
					"name": "MAX_WORKERS"
				},
				{
					"default": true,
					"label": "RECIPE_PUBLIC",
					"name": "RECIPE_PUBLIC"
				},
				{
					"default": true,
					"label": "RECIPE_SHOW_NUTRITION",
					"name": "RECIPE_SHOW_NUTRITION"
				},
				{
					"default": true,
					"label": "RECIPE_SHOW_ASSETS",
					"name": "RECIPE_SHOW_ASSETS"
				},
				{
					"default": true,
					"label": "RECIPE_LANDSCAPE_VIEW",
					"name": "RECIPE_LANDSCAPE_VIEW"
				},
				{
					"default": false,
					"label": "RECIPE_DISABLE_COMMENTS",
					"name": "RECIPE_DISABLE_COMMENTS"
				},
				{
					"default": false,
					"label": "RECIPE_DISABLE_AMOUNT",
					"name": "RECIPE_DISABLE_AMOUNT"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/medusa:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/medusa-icon.png",
			"name": "medusa",
			"platform": "linux",
			"ports": [
				"8081:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Medusa",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Medusa",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
        {
			"categories": [
                "Other",
                "Tools",
                "Games"
			],
			"description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
            "image": "itzg/minecraft-server:multiarch-latest",
                        "logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/minecraft.png",
                        "name": "minecraft",
                        "platform": "linux",
                        "type": 1,
                        "ports": [
                                "25565:25565/tcp"
                        ],
                        "volumes": [
                                {
                                        "bind": "/portainer/Files/AppData/Config/Minecraft-data",
                                        "container": "/data"
                                }
                        ],
                        "env": [
                                {
                                        "label": "EULA",
                                        "name": "EULA",
                                        "default": "TRUE"
                                }
                        ],
                        "restart_polocy": "unless-stopped",
                        "title": "Minecraft Server"
                },
		{
			"categories": [
				"Other"
			],
			"description": "Server version of minetest, a free, open source alternative to minecraft.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/minetest:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
			"name": "minetest",
			"platform": "linux",
			"ports": [
				"30000:30000/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Minetest",
			"type": 1,
			"volumes": [
				{
					"container": "/config/.minetest"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Other",
				"Tools"
			],
			"description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.\n  ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/minisatip:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/minisatip-icon.png",
			"name": "minisatip",
			"platform": "linux",
			"ports": [
				"8875:8875/tcp",
				"554:554/tcp",
				"1900:1900/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Minisatip",
			"type": 1
		},
		{
			"categories": [
				"Other",
				"Music"
			],
			"description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone..",
			"image": "linuxserver/mstream:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/mstream.png",
			"name": "mstream",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Mstream",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Mstream",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/music"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Voice",
				"Chat"
			],
			"description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "yhaenggi/murmur:1.3.4",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/Mumble-logo.png",
			"name": "murmur",
			"platform": "linux",
			"ports": [
				"64738:64738/tcp",
				"64738:64738/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "Murmur",
			"type": 1,
			"volumes": [
				{
					"bind": "/etc/localtime:ro",
					"container": "/etc/localtime"
				},
				{
					"bind": "/portainer/Files/Config/Murmur",
					"container": "/opt/murmur/config"
				},
				{
					"bind": "/portainer/Files/Murmur/data",
					"container": "/opt/murmur/data"
				},
				{
					"bind": "/portainer/Files/Murmur/log",
					"container": "/opt/murmur/log"
				}
			]
		},
		{
			"categories": [
				"Music",
				"Other",
				"Tools"
			],
			"description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
			"env": [
				{
					"label": "BRAINZCODE",
					"name": "BRAINZCODE",
					"default": ""
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/musicbrainz:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/musicbrainz-icon.png",
			"name": "musicbrainz",
			"platform": "linux",
			"ports": [
				"5000:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "MusicBrainz",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/MusicBrainz",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/MusicBrainz",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Web",
				"Proxy",
				"Other",
				"Tools"
			],
			"description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/muximux:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/muximux-icon.png",
			"name": "muximux",
			"platform": "linux",
			"ports": [
				"7205:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Muximux",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Muximux",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Books"
			],
			"description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/mylar:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/mylar-icon.png",
			"name": "mylar",
			"platform": "linux",
			"ports": [
				"8090:8090/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Mylar",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Mylar",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Comics",
					"container": "/comics"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "n8n is an extendable workflow automation tool.",
			"image": "n8nio/n8n:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/n8n.jpg",
			"name": "n8n",
			"note": "Documentation is Available \u003ca href='https://docs.n8n.io/'\u003ehere\u003c/a\u003e",
			"platform": "linux",
			"ports": [
				"5678:5678/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "n8n",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/n8n",
					"container": "/home/node/.n8n"
				}
			],
			"env": [
				{
					"default": true,
					"label": "N8N_BASIC_AUTH_ACTIVE",
					"name": "N8N_BASIC_AUTH_ACTIVE"
				},
				{
					"default": "admin",
					"label": "N8N_BASIC_AUTH_USER",
					"name": "N8N_BASIC_AUTH_USER"
				},
				{
					"default": "admin",
					"label": "N8N_BASIC_AUTH_PASSWORD",
					"name": "N8N_BASIC_AUTH_PASSWORD"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
			"image": "netdata/netdata:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/netdata.png",
			"name": "netdata",
			"note": "Documentation is Available \u003ca href='https://learn.netdata.cloud/'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"19999:19999/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Netdata",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/netdata/netdataconfig",
					"container": "/etc/netdata"
				},
				{
					"bind": "/portainer/Files/AppData/Config/netdata/netdatalib",
					"container": "/var/lib/netdata"
				},
				{
					"bind": "/etc/passwd",
					"container": "/host/etc/passwd:ro"
				},
				{
					"bind": "/etc/group",
					"container": "/host/etc/group:ro"
				},
				{
					"bind": "/proc",
					"container": "/host/proc:ro"
				},
				{
					"bind": "/sys",
					"container": "/host/sys:ro"
				},
				{
					"bind": "/etc/os-release",
					"container": "/host/etc/os-release:ro"
				}
			],
			"env": [
				{
					"default": "1000",
					"label": "DOCKER_USR",
					"name": "DOCKER_USR"
				},
				{
					"default": "1000",
					"label": "DOCKER_GRP",
					"name": "DOCKER_GRP"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Other",
				"Web"
			],
			"description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				},
				{
					"label": "PORT",
					"name": "PORT"
				}
			],
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/nextcloud-icon.png",
			"name": "nextcloud",
			"note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
			"platform": "linux",
			"repository": {
				"stackfile": "stack/nextcloud.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			},
			"title": "Nextcloud",
			"type": 3
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Other",
				"Web"
			],
			"description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"name": "nextcloudpi",
			"note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
			"platform": "linux",
			"image": "ownyourbits/nextcloudpi",
			"title": "NextcloudPi",
			"type": 1,
			"ports":[
				"4443:4443/tcp",
				"8443:443/tcp",
				"8480:8480/tcp"
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ncdata",
					"container": "/data"
				}
			]	
		},
		{
			"categories": [
				"Web",
				"Proxy"
			],
			"description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/nginx:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/nginx-icon.png",
			"name": "nginx",
			"platform": "linux",
			"ports": [
				"8080:80/tcp",
				"8443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Nginx",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/novaspirit/pi-hosted/tree/master/docs installing the template",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/proxy_mgr.png",
			"name": "nginx-proxy-manager",
			"platform": "linux",
			"ports": [
				"80:8080/tcp",
				"81:8181/tcp",
				"443:4443/tcp"
			],
			"env": [
				{
					"default": "password",
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"default": "password",
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				}
				
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager",
			"type": 3,
			"repository": {
				"stackfile": "stack/nginx-proxy-manager.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},		
		{
			"categories": [
                "Other",
				"Web",
				"Tools"
			],
			"description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
			"env": [
				{
					"default": "your_secret_goes_here",
					"label": "NODE_RED_CREDENTIAL_SECRET",
					"name": "NODE_RED_CREDENTIAL_SECRET"
				},
				{
					"default": "America/New_York",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/node-red.png",
			"name": "node-red",
			"platform": "linux",
			"ports": [
				"1880:1880/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Node Red",
			"type": 3,
			"repository": {
				"stackfile": "stack/node-red.yml",
				"url": "https://github.com/novaspirit/pi-hosted/"
			}
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/nzbget:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/nzbget-icon.png",
			"name": "nzbget",
			"platform": "linux",
			"ports": [
				"6789:6789/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "NZBGet",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Nzbget",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Other",
				"Tools"
			],
			"description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/nzbhydra2:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/hydra-icon.png",
			"name": "nzbhydra2",
			"platform": "linux",
			"ports": [
				"5076:5076/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "NZBHydra 2",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Nzbhydra2",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Other",
				"Video",
				"Tools"
			],
			"description": "Ombi allows you to host your own Plex Request and user management system. ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/ombi:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/ombi.png",
			"name": "ombi",
			"platform": "linux",
			"ports": [
				"3579:3579/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Ombi",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Ombi",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other"
			],
			"description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
			"env": [
				{
					"default": "eth0",
					"label": "INTERFACE",
					"name": "INTERFACE"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/openvpn-as:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/openvpn-as-icon.png",
			"name": "openvpn-as",
			"platform": "linux",
			"ports": [
				"943:943/tcp",
				"9443:9443/tcp",
				"1194:1194/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "OpenVPN Access Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "organizr/organizr:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/organizr-icon.png",
			"name": "organizr-v2",
			"platform": "linux",
			"ports": [
				"7171:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Organizr v2",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Organizr",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other"
			],
			"description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/oscam:latest",
			"logo": "http://i.imgur.com/8LadrLg.png",
			"name": "oscam",
			"platform": "linux",
			"ports": [
				"8888:8888/tcp",
				"10000:10000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "OScam",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/OScam",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Management",
				"Productivity"
			],
			"description": "Paperless is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents. https://github.com/jonaswinkler/paperless-ng",
			"image": "linuxserver/paperless-ng",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/paperless.png",
			"name": "paperless",
			"platform": "linux",
			"ports": [
				"8005:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Paperless",
			"type": 1,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/paperless/config",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/paperless/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Photos"
			],
			"description": "A simple, easy way to turn a photo album into a webgallery",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/photoshow:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/photoshow-icon.png",
			"name": "photoshow",
			"platform": "linux",
			"ports": [
				"7380:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "PhotoShow",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Pictures",
					"container": "/Pictures"
				},
				{
					"bind": "/portainer/Files/AppData/Photoshow/Thumbs",
					"container": "/Thumbs"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PhotoShow",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
			"image": "pihole/pihole:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/pihole.png",
			"name": "pihole",
			"note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
			"image": "oijkn/pihole-doh-dot:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/pihole_doh-dot.png",
			"name": "pihole DoH/DoT",
			"note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole DoH/DoT",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
					"container": "/etc/pihole"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Photos"
			],
			"description": "[Current Issue with PiWigo arm32 support pending fix]Piwigo is photo gallery software for the web, built by an active community of users and developers.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/piwigo:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/piwigo-icon.png",
			"name": "piwigo",
			"platform": "linux",
			"ports": [
				"7528:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Piwigo",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PiWigo",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "VERSION",
					"name": "VERSION",
					"default": "latest"
				}
			],
			"image": "linuxserver/plex:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/plex-icon.png",
			"name": "plex",
			"network": "host",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Plex",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Plex",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Other",
				"Video",
				"Tools"
			],
			"description": "Simple automated way for users to request new content for Plex.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"label": "URL_BASE",
					"name": "URL_BASE",
					"default": ""
				}
			],
			"image": "linuxserver/plexrequests:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
			"name": "plexrequests",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Plex Requests",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/PlexRequests",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Web"
			],
			"description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!\n  ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "privatebin/nginx-fpm-alpine:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/privatebin.png",
			"name": "privatebin",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "PrivateBin",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/PrivateBin",
					"container": "/srv/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/PrivateBin",
					"container": "/srv/cfg"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Productivity",
				"Tools",
				"Other"
			],
			"description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/projectsend:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/projectsend-logo.png",
			"name": "projectsend",
			"platform": "linux",
			"ports": [
				"7580:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "ProjectSend",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/ProjectSend",
					"container": "/data"
				},
				{
					"bind": "/portainer/Files/AppData/Config/ProjectSend",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Email",
				"Productivity",
				"Tools",
				"Other"
			],
			"description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
			"image": "shenxn/protonmail-bridge:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/protonmail-bridge.png",
			"name": "protonmail-bridge",
			"note": "Please refer to the documentation \u003ca href='https://hub.docker.com/r/shenxn/protonmail-bridge'/\u003ehere\u003c/a\u003e to set this up.",
			"platform": "linux",
			"ports": [
				"143:143/tcp",
				"25:25/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "ProtonMail Bridge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/ProtonMail-Bridge",
					"container": "/root"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Other"
			],
			"description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/pydio:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/pydio-icon.png",
			"name": "pydio",
			"platform": "linux",
			"ports": [
				"7526:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pydio",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Pydio",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Pydio",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/qbittorrent:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/qbittorrent-icon.png",
			"name": "qbittorrent",
			"platform": "linux",
			"ports": [
				"6881:6881/tcp",
				"6881:6881/udp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "qBittorrent",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/qBittorrent",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Messenger"
			],
			"description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/quassel-core:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/quassel-core-icon.png",
			"name": "quassel-core",
			"platform": "linux",
			"ports": [
				"4242:4242/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Quassel IRC",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Quassel-core",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/radarr:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/radarr.png",
			"name": "radarr",
			"platform": "linux",
			"ports": [
				"7878:7878/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Radarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Radarr",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Monitor",
				"Tools"
			],
			"description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/rpi_monitor.png",
			"name": "RaspberryPi-Docker-Monitor",
			"platform": "linux",
			"ports": [
				"3000:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Raspberry Pi Docker Monitor",
			"type": 3,
			"repository": {
				"stackfile": "stack/raspberrypi-monitoring.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
			"image": "amruthpillai/reactive-resume:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/reactiveresume.png",
			"name": "reactive-resume",
			"platform": "linux",
			"ports": [
				"7768:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Reactive-Resume",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ReactiveResume",
					"container": "/usr/src/app"
				}
			]
		},
		{
			"categories": [
				"Backup",
				"Cloud",
				"Other",
				"Tools"
			],
			"description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/resilio-sync:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/resilio.png",
			"name": "resilio-sync",
			"platform": "linux",
			"ports": [
				"8888:8888/tcp",
				"55555:55555/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Resilio Sync",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Resilio-Sync",
					"container": "/config"
				},
				{
					"container": "/sync"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Popular torrent client with a webui for ease of use.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/rutorrent:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
			"name": "rutorrent",
			"platform": "linux",
			"ports": [
				"5324:80/tcp",
				"51413:51413/tcp",
				"6881:6881/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "ruTorrent",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ruTorrent",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/sabnzbd:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/sabnzbd-icon.png",
			"name": "sabnzbd",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp",
				"9090:9090/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SABnzbd",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Sabnzbd",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/Downloads/incomplete",
					"container": "/incomplete-downloads"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
			"image": "radhifadlillah/shiori:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/shiori-icon.png",
			"name": "shiori",
			"platform": "linux",
			"ports": [
				"7564:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Shiori",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Shiori",
					"container": "/srv/shiori"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/sickchill:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/sickchill-icon.png",
			"name": "sickchill",
			"platform": "linux",
			"ports": [
				"8081:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SickChill",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/SickChill",
					"container": "/config"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/sickgear:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/sickgear-icon.png",
			"name": "sickgear",
			"platform": "linux",
			"ports": [
				"8081:8081/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SickGear",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/SickGear",
					"container": "/config"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Management"
			],
			"description": null,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/smokeping:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/smokeping-icon.png",
			"name": "smokeping",
			"platform": "linux",
			"ports": [
				"4794:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SmokePing",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Smokeping",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Smokeping",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
			"image": "pawelmalak/snippet-box:arm",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/snibox.png",
			"name": "Snippet-box",
			"note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
			"platform": "linux",
			"ports": [
				"5010:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Snippet-box",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Snippet-box",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
			"env": [
				{
					"default": "latest-arm",
					"label": "arch",
					"name": "arch"
				},
				{
					"default": "true",
					"label": "OOKLA_EULA_GDPR",
					"name": "OOKLA_EULA_GDPR"
				}
			],
			"image": "henrywhitaker3/speedtest-tracker:dev-arm",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/speedtest-tracker.png",
			"name": "speedtest-tracker",
			"platform": "linux",
			"ports": [
				"8765:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Speedtest Tracker",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/speedtest-tracker",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/sonarr:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/sonarr-icon.png",
			"name": "sonarr",
			"platform": "linux",
			"ports": [
				"8989:8989/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Sonarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Sonarr",
					"container": "/config"
				},
				{
					"bind": "/dev/rtc",
					"container": "/dev/rtc"
				},
				{
					"bind": "/portainer/TV",
					"container": "/tv"
				},
				{
					"bind": "/portainer/Downloads",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Backup",
				"Cloud",
				"Other",
				"Tools"
			],
			"description": null,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/syncthing:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/syncthing-icon.png",
			"name": "syncthing",
			"platform": "linux",
			"ports": [
				"8384:8384/tcp",
				"21027:21027/udp",
				"22000:22000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "SyncThing",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Syncthing",
					"container": "/config"
				},
				{
					"container": "/sync"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.[br][br]\r\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\r\n  [b]8181[/b] The webui for Tautulli's webui [br]\r\n  [b]/config[/b] Storing Configuration and the Tautulli database[br]\r\n[b]/logs[/b] Map to you plex logs (required for IP logging)[br]\r\n\r\n",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/tautulli:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/tautulli-icon.png",
			"name": "tautulli",
			"platform": "linux",
			"ports": [
				"8181:8181/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Tautulli",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Logs",
					"container": "/logs"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Tautulli",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Messenger"
			],
			"description": "A self-hosted web IRC client",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/thelounge:latest",
			"logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
			"name": "thelounge",
			"platform": "linux",
			"ports": [
				"9500:9000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "TheLounge",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/TheLounge",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A unique, non-linear notebook wiki.",
			"image": "mazzolino/tiddlywiki:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/tiddlywiki.png",
			"name": "tiddlywiki",
			"platform": "linux",
			"ports": [
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "TiddlyWiki",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/TiddlyWiki",
					"container": "/var/lib/tiddlywiki"
				}
			]
		},
		{
			"categories": [
				"Other"
			],
			"description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "lunik1/tt-rss:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/tt-rss-icon.png",
			"name": "tt-rss",
			"platform": "linux",
			"ports": [
				"7352:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Tiny Tiny RSS",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/tt-rss",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/transmission:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/transmission-icon.png",
			"name": "transmission",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp",
				"51413:51413/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Transmission",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Transmission",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/Downloads",
					"container": "/downloads"
				},
				{
					"container": "/watch"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN",
				"Tools"
			],
			"description": "[arm] This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "MULLVAD",
					"description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
					"label": "OPENVPN_PROVIDER",
					"name": "OPENVPN_PROVIDER"
				},
                {
                    "default": "",
                    "description": "Optional. Mostly used to narrow down what location to use by the provider",
                    "label": "OPENVPN_CONFIG",
                    "name": "OPENVPN_CONFIG"
                },
				{
					"default": "",
					"label": "OPENVPN_USERNAME",
					"name": "OPENVPN_USERNAME"
				},
				{
					"default": "",
					"label": "OPENVPN_PASSWORD",
					"name": "OPENVPN_PASSWORD"
				},
				{
					"default": "192.168.0.0/24",
					"label": "LOCAL_NETWORK",
					"name": "LOCAL_NETWORK"
				}
			],
			"image": "haugene/transmission-openvpn:3.7.1",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/transmission-icon.png",
			"name": "transmission-openvpn",
			"note": "List of supported providers available \u003ca href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9091:9091/tcp"
			],
			"privileged": true,
			"restart_policy": "unless-stopped",
			"title": "Transmission-OpenVPN",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Downloads",
					"container": "/data"
				},
				{
					"bind": "/etc/localtime",
					"container": "/etc/localtime"
				}
			]
		},
		{
			"categories": [
				"Proxy",
				"Security",
				"Tools"
			],
			"description": "Cloud-Native Networking Stack That Just Works.",
			"image": "traefik:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/traefik.png",
			"name": "traefik",
			"note": "A simple and lightweight reverse proxy",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"443:443/tcp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Traefik",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
					"container": "/traefik.yml"
				},
				{
					"bind": "/portainer/Files/AppData/Config/traefik/config.yml",
					"container": "/config.yml"
				},
				{
					"bind": "/portainer/Files/AppData/Config/traefik/acme.json",
					"container": "acme.json"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"

				}
			]
		},
		{
			"categories": [
				"Video",
				"Other"
			],
			"description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT\u0026gt;IP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT\u0026gt;IP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/tvheadend:latest",
			"logo": "http://i.imgur.com/zGSUAT4.png",
			"name": "tvheadend",
			"platform": "linux",
			"ports": [
				"9981:9981/tcp",
				"9982:9982/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Tvheadend",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/TVHeadend",
					"container": "/config"
				},
				{
					"container": "/recordings"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
			"env": [
				{
					"label": "MAXMEM",
					"name": "MAXMEM",
					"default": "512"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/ubooquity:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/ubooquity-icon.png",
			"name": "ubooquity",
			"platform": "linux",
			"ports": [
				"2202:2202/tcp",
				"2203:2203/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Ubooquity",
			"type": 1,
			"volumes": [
				{
					"container": "/books"
				},
				{
					"container": "/comics"
				},
				{
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Management",
				"Tools"
			],
			"description": null,
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/unifi-controller:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/unifi-icon.png",
			"name": "unifi-controller",
			"platform": "linux",
			"ports": [
				"3478:3478/udp",
				"10001:10001/udp",
				"8080:8080/tcp",
				"8081:8081/tcp",
				"8443:8443/tcp",
				"8843:8843/tcp",
				"8880:8880/tcp",
				"6789:6789/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "UniFi Controller",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Unifi",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"CCTV"
			],
			"description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti’s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature‑packed user interface with advanced features such as motion detection, auto‑discovery, user‑level security, storage management, reporting, and mobile device support.",
			"env": [
				{
					"default": "99",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "002",
					"label": "UMASK",
					"name": "UMASK"
				},
				{
					"label": "CONTEXT_PATH",
					"name": "CONTEXT_PATH",
					"default": "UniFi Video"
				}
			],
			"image": "pducharme/unifi-video-controller:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/unifivideo-icon.png",
			"name": "UniFi Video",
			"platform": "linux",
			"ports": [
				"1935:1935/tcp",
				"7444:7444/tcp",
				"7447:7447/tcp",
				"6666:6666/tcp",
				"7442:7442/tcp",
				"7080:7080/tcp",
				"7443:7443/tcp",
				"7445:7445/tcp",
				"7446:7446/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "UniFi Video",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
					"container": "/recordings"
				},
				{
					"bind": "/portainer/Files/AppData/Config/UniFiVideo/",
					"container": "/config"
				}
			]
    		},
		{
			"categories": [
				"Monitor",
				"Tools"
			],
			"description": "Monitor your Unifi Controller using Grafana developed by oijkn for the Raspberry Pi Monitor.",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/unpoller-logo.png",
			"name": "UnPoller Unifi Controller Monitor",
			"platform": "linux",
			"ports": [
				"8086:8086/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "UnPoller Monitor",
			"type": 3,
			"repository": {
				"stackfile": "stack/unpoller-stack.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "It is a self-hosted monitoring tool like 'Uptime Robot'.",
			"image": "louislam/uptime-kuma:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/uptime-kuma.png",
			"name": "uptime-kuma",
			"note": "A fancy self-hosted monitoring tool.",
			"platform": "linux",
			"ports": [
				"3001:3001/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Uptime Kuma",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/uptime-kuma",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
			"image": "vaultwarden/server:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/bitwarden.png",
			"name": "vaultwarden",
			"note": "Alternative Implementation of the Bitwarden Server API in Rust, including web vault.",
			"platform": "linux",
			"ports": [
				"8010:80/tcp",
				"3012:3012/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Vaultwarden",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Bitwarden",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools",
				"Maintenance"
			],
			"description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
			"image": "containrrr/watchtower:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/watchtower.png",
			"name": "watchtower",
			"note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Watchtower",
			"type": 1,
			"volumes": [
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n\t\thttp://www.webgrabplus.com/[br]\r\n\t\t[b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n\t\t[b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n\t\t[b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/webgrabplus:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/webgrabplus.png",
			"name": "webgrabplus",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "WebGrab+Plus",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/WebGrabPlus",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/WebGrabPlus",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
			"image": "benbusby/whoogle-search:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/whoogle.png",
			"name": "whoogle",
			"platform": "linux",
			"ports": [
				"5001:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Whoogle",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Whoogle",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
			"image": "linuxserver/wikijs:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/wikijs.png",
			"name": "wikijs",
			"platform": "linux",
			"ports": [
				"3100:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Wikijs",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/Wikijs",
					"container": "/config"
				},
				{
					"bind": "/portainer/Files/AppData/Config/Wikijs/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN"
			],
			"description": "You have found the easiest way to install & manage WireGuard on any Linux host!",
			"image": "weejewel/wg-easy",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/wireguard.png",
			"name": "wg-easy",
			"platform": "linux",
			"title": "Wireguard Server",
			"type": 3,
			"repository": {
				"stackfile": "stack/wireguard-easy.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},
		{
			"categories":[
				"WordPress",
				"Web"
			],
			"description":"Wordpress setup with a MySQL database",
			"env":[
				{
					"default": "5080",
					"name":"WEB_SERVER_PORT",
					"label":"External Port for webserver forward to port 80"
				},
				{
					"default": "wordpress",
					"name":"MYSQL_DATABASE_USER_NAME",
					"label":"Database user name"
				},
				{
					"name":"MYSQL_DATABASE_PASSWORD",
					"label":"Database password for user"
				},
				{
					"name":"MYSQL_DATABASE_ROOT_PASSWORD",
					"label":"Database root password"
				}
			],
			"logo":"https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/wordpress.png",
			"note":"Deploys a Wordpress instance connected to a MySQL database.",

			"platform":"linux",

			"repository":{
				"url": "https://github.com/novaspirit/pi-hosted",
				"stackfile": "stack/wordpress-stack.yml"
			},
			"title":"Wordpress",
			"type": 3
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
			"image": "selfhostedpro/yacht:latest",
			"logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
			"name": "yacht",
			"platform": "linux",
			"ports": [
				"8001:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Yacht",
			"type": 1,
			"volumes": [
				{
					"bind": "yacht",
					"container": "/config"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Downloaders"
			],
			"description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
			"image": "tzahi12345/youtubedl-material:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/ytdlm.png",
			"name": "youtubedl-material",
			"platform": "linux",
			"ports": [
				"17442:17442/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "YouTubeDL-Material",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/YTDLM",
					"container": "/app/appdata"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Video",
					"container": "/app/video"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Subscriptions",
					"container": "/app/subscriptions"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Users",
					"container": "/app/users"
				},
				{
					"bind": "/portainer/Files/AppData/Youtube/Audio",
					"container": "/app/audio"
				}
			]
		},
		{
			"categories": [
				"Messenger"
			],
			"description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1000",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/znc:latest",
			"logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/znc-icon.png",
			"name": "znc",
			"platform": "linux",
			"ports": [
				"6501:6501/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "ZNC",
			"type": 1,
			"volumes": [
				{
					"bind": "/portainer/Files/AppData/Config/ZNC",
					"container": "/config"
				}
			]
		}
	]
}
